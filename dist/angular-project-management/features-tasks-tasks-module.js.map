{"version":3,"sources":["webpack:///./src/app/features/tasks/new-task/new-task.component.html","webpack:///./src/app/features/tasks/new-task/new-task.component.scss","webpack:///./src/app/features/tasks/new-task/new-task.component.ts","webpack:///./src/app/features/tasks/shared/task.service.ts","webpack:///./src/app/features/tasks/shared/task.ts","webpack:///./src/app/features/tasks/task-result-form/task-result-form.component.html","webpack:///./src/app/features/tasks/task-result-form/task-result-form.component.scss","webpack:///./src/app/features/tasks/task-result-form/task-result-form.component.ts","webpack:///./src/app/features/tasks/tasks-list/tasks-list.component.html","webpack:///./src/app/features/tasks/tasks-list/tasks-list.component.scss","webpack:///./src/app/features/tasks/tasks-list/tasks-list.component.ts","webpack:///./src/app/features/tasks/tasks-routing.module.ts","webpack:///./src/app/features/tasks/tasks.module.ts"],"names":[],"mappings":";;;;;;;;;AAAA,6GAA6G,SAAS,2KAA2K,0CAA0C,sJAAsJ,wCAAwC,sXAAsX,0CAA0C,+MAA+M,yCAAyC,sNAAsN,0CAA0C,4XAA4X,wCAAwC,kPAAkP,yCAAyC,2TAA2T,0CAA0C,waAAwa,6BAA6B,6IAA6I,uCAAuC,yLAAyL,kCAAkC,eAAe,8GAA8G,qCAAqC,qG;;;;;;;;;;;ACA37G,2BAA2B,gBAAgB,EAAE,eAAe,eAAe,iBAAiB,kBAAkB,4BAA4B,wBAAwB,EAAE,iBAAiB,qBAAqB,iBAAiB,eAAe,iBAAiB,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA1I;AACvC;AAGsB;AACxC;AAEvB;AACM;AAC8B;AACM;AAC7B;AACK;AAEkB;AACI;AACG;AAO9E;IAsBE,0BAAoB,WAAwB,EAAU,MAAc,EAC1D,WAAwB,EAAU,MAAiB,EACnD,cAA8B,EAC9B,cAA8B,EAAU,aAAoC,EAC5E,MAAc;QAJJ,gBAAW,GAAX,WAAW,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;QAC1D,gBAAW,GAAX,WAAW,CAAa;QAAU,WAAM,GAAN,MAAM,CAAW;QACnD,mBAAc,GAAd,cAAc,CAAgB;QAC9B,mBAAc,GAAd,cAAc,CAAgB;QAAU,kBAAa,GAAb,aAAa,CAAuB;QAC5E,WAAM,GAAN,MAAM,CAAQ;QAvBQ,aAAQ,GAAW,CAAC,CAAC;QACrD,UAAK,GAAG,EAAE,CAAC;QAED,kBAAa,GAAG,IAAI,0DAAY,EAAO,CAAC;QAG3C,iBAAY,GAAW,EAAE,CAAC;QAC1B,gBAAW,GAAW,EAAE,CAAC;QACzB,iBAAY,GAAY,IAAI,gEAAO,EAAE,CAAC;QACtC,oBAAe,GAAqB,IAAI,iFAAgB,EAAE,CAAC;QAMzD,WAAM,GAAW,CAAC,CAAC;QAC5B,eAAU,GAAG,KAAK,CAAC;QACZ,cAAS,GAAS,IAAI,IAAI,EAAE,CAAC;QAOlC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAClD,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,IAAI,CAAC,eAAe,EAAE;IACxB,CAAC;IACD,mCAAQ,GAAR;QAAA,iBAiBC;QAfC,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;YAClB,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,cAAI;gBAClD,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC;gBACjB,EAAE,CAAC,CAAC,KAAI,CAAC,MAAM,GAAG,CAAC,IAAI,KAAI,CAAC,IAAI,CAAC,SAAS,IAAI,IAAI,IAAI,KAAI,CAAC,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC,CAAC;oBAC9E,KAAI,CAAC,YAAY,GAAG,CAAC,KAAI,CAAC,KAAK,CAAC,MAAM,CAAC,WAAC,IAAI,QAAC,CAAC,EAAE,KAAK,KAAI,CAAC,IAAI,CAAC,SAAS,EAA5B,CAA4B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAChF,CAAC;gBAGD,EAAE,CAAC,CAAC,KAAI,CAAC,MAAM,GAAG,CAAC,IAAI,KAAI,CAAC,IAAI,CAAC,SAAS,IAAI,IAAI,IAAI,KAAI,CAAC,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC,CAAC;oBAC9E,KAAI,CAAC,eAAe,GAAG,CAAC,KAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,WAAC,IAAI,QAAC,CAAC,EAAE,KAAK,KAAI,CAAC,IAAI,CAAC,SAAS,EAA5B,CAA4B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACtF,CAAC;gBAED,KAAI,CAAC,aAAa,EAAE,CAAC;YACvB,CAAC,CAAC,CAAC;QACL,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC,sBAAsB,CAAC,wBAAwB,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;IACzG,CAAC;IAED,wCAAa,GAAb;QAEE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACrC,IAAI,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;YACpB,UAAU,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACrD,iBAAiB,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;YACvC,WAAW,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC;YAClC,cAAc,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC;YACxC,SAAS,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC;YAC9B,UAAU,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;YAChC,MAAM,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC;YACpC,WAAW,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC;YACnC,WAAW,EAAE,CAAC,IAAI,CAAC,eAAe,CAAC,EAAE,CAAC;YACtC,aAAa,EAAE,CAAC,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC;SAClD,CAAC,CAAC;QACH,4DAA4D;IAC9D,CAAC;IACD,0CAAe,GAAf;QAAA,iBAOC;QANC,IAAI,CAAC,cAAc,CAAC,eAAe,EAAE;aAClC,SAAS,CAAC,cAAI;YACb,KAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,CAAC;YACvB,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,QAAQ,CAAC,CAAC;QAC7B,CAAC,CAAC,CAAC;IAEP,CAAC;IACD,4CAAiB,GAAjB;QAAA,iBAKC;QAJC,IAAI,CAAC,cAAc,CAAC,iBAAiB,EAAE;aACpC,SAAS,CAAC,cAAI;YACb,KAAI,CAAC,KAAK,GAAG,CAAC,IAAI,CAAC,CAAC;QACtB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,8CAAmB,GAAnB,UAAoB,EAAU;QAC5B,IAAI,QAAQ,GAAG,IAAI,qDAAQ,CAAC,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC;QACrF,MAAM,CAAC,QAAQ,CAAC;IAClB,CAAC;IAED,kCAAO,GAAP;QACE,MAAM,cACD,IAAI,CAAC,QAAQ,CAAC,KAAK,EACtB;IACJ,CAAC;IAED,2CAAgB,GAAhB;QACE,IAAI,CAAC,UAAU,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC;QACnC,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;YACpB,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;YACjD,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;QACjD,CAAC;QACD,MAAM,CAAC;IACT,CAAC;IAGD,qCAAqC;IACrC,6CAAkB,GAAlB,UAAmB,KAAc;QAAjC,iBAkBC;QAjBC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;YACV,8BAA8B;QAChC,CAAC;QACD,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,uEAAmB,EAAE;YAC1D,IAAI,EAAE,EAAE,QAAQ,EAAE,IAAI,CAAC,KAAK,EAAE,WAAW,EAAE,IAAI,CAAC,YAAY,EAAE,WAAW,EAAE,aAAa,EAAE,EAAE,YAAY,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,MAAM,EAAE,OAAO;SAChJ,CAAC,CAAC;QACH,IAAI,CAAC,cAAc,CAAC,WAAW,EAAE,CAAC,IAAI,EAAE;aACrC,SAAS,CACT,gBAAM;YACL,KAAI,CAAC,eAAe,GAAG,MAAM,CAAC;YAC9B,EAAE,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,MAAM,GAAG,CAAC,IAAI,KAAI,CAAC,eAAe,KAAK,IAAI,IAAI,KAAI,CAAC,eAAe,KAAK,SAAS,CAAC,CAAC,CAAC;gBAC1G,KAAI,CAAC,YAAY,GAAG,KAAI,CAAC,eAAe,CAAC;gBACzC,KAAI,CAAC,YAAY,GAAG,KAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC,2BAA2B;gBAC9E,KAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC,KAAI,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC;gBACnE,KAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,KAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;YACtE,CAAC;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IAED,uCAAY,GAAZ;QACE,MAAM,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAC5B,CAAC;IACJ,CAAC;IAED,+BAAI,GAAJ;QAAA,iBA4BC;QA3BC,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC;YACtB,MAAM,CAAC;QAET,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;QAC/B,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,eAAa,OAAS,CAAC,CAAC;QAExC,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;YACrB,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,gBAAM;gBACnD,gBAAgB;gBAChB,KAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;gBACtB,KAAI,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;gBAC5B,GAAG;YACL,CAAC,CAAC,CAAC;QACL,CAAC;QACD,IAAI,CAAC,CAAC;YACJ,OAAO,CAAC,EAAE,GAAG,SAAS,CAAC;YAEvB,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,gBAAM;gBAChD,iBAAiB;gBACjB,KAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;gBACtB,KAAI,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;gBAC5B,gBAAgB;gBAChB,0BAA0B;gBAC1B,+BAA+B;gBAC/B,IAAI;YACN,CAAC,CAAC,CAAC;QACL,CAAC;IACH,CAAC;IAED,iDAAsB,GAAtB,UAAuB,KAAc;QAArC,iBAoBC;QAnBC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;YACV,8BAA8B;QAChC,CAAC;QACD,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,uEAAmB,EAAE;YAC7D,IAAI,EAAE,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,WAAW,EAAE,IAAI,CAAC,eAAe,EAAE,SAAS,EAAE,IAAI,EAAE,WAAW,EAAE,gBAAgB,EAAE;YACpH,YAAY,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,MAAM,EAAE,OAAO;SACpD,CAAC,CAAC;QACH,IAAI,CAAC,iBAAiB,CAAC,WAAW,EAAE,CAAC,IAAI,EAAE;aACxC,SAAS,CACT,gBAAM;YACL,KAAI,CAAC,kBAAkB,GAAG,MAAM,CAAC;YACjC,EAAE,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,MAAM,IAAI,KAAI,CAAC,kBAAkB,KAAK,IAAI,IAAI,KAAI,CAAC,kBAAkB,KAAK,SAAS,CAAC,CAAC,CAAC;gBAC5G,KAAI,CAAC,eAAe,GAAG,KAAI,CAAC,kBAAkB,CAAC;gBAC/C,KAAI,CAAC,WAAW,GAAG,KAAI,CAAC,kBAAkB,CAAC,WAAW,CAAC,CAAC,2BAA2B;gBACnF,KAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC,KAAI,CAAC,eAAe,CAAC,EAAE,CAAC,CAAC;gBACtE,KAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,QAAQ,CAAC,KAAI,CAAC,eAAe,CAAC,WAAW,CAAC,CAAC;YACnF,CAAC;QAEH,CAAC,CAAC,CAAC;IACP,CAAC;IAnLQ;QAAR,2DAAK,EAAE;kCAAW,wDAAS;sDAAC;IACP;QAArB,+DAAS,CAAC,SAAS,CAAC;;qDAAS;IAGrB;QAAR,2DAAK,EAAE;;kDAAc;IACZ;QAAT,4DAAM,EAAE;;2DAAyC;IAYzC;QAAR,2DAAK,EAAE;;oDAAoB;IAlBjB,gBAAgB;QAL5B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;;;SAGzB,CAAC;yCAuBiC,0DAAW,EAAkB,sDAAM;YAC7C,gEAAW,EAAkB,2DAAS;YACnC,+EAAc;YACd,gFAAc,EAAyB,oFAAqB;YACpE,gDAAM;OA1Bb,gBAAgB,CAuL5B;IAAD,uBAAC;CAAA;AAvL4B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvBc;AACuC;AAC5B;AAGtD,qEAAqE;AACrE,+DAA+D;AAChB;AACZ;AACM;AAGa;AAGtD,IAAM,WAAW,GAAG;IAChB,OAAO,EAAE,IAAI,gEAAW,CAAC,EAAE,cAAc,EAAE,kBAAkB,EAAE,OAAO,EAAE,4DAAW,CAAC,KAAK,EAAE,CAAC;CAC/F,CAAC;AAGF;IAII,qBACY,IAAgB,EAChB,MAAc,EACd,aAAoC,EACpC,YAA0B;QAH1B,SAAI,GAAJ,IAAI,CAAY;QAChB,WAAM,GAAN,MAAM,CAAQ;QACd,kBAAa,GAAb,aAAa,CAAuB;QACpC,iBAAY,GAAZ,YAAY,CAAc;QAP9B,YAAO,GAAG,4DAAW,CAAC,OAAO,CAAC;QAC9B,aAAQ,GAAM,IAAI,CAAC,OAAO,UAAO,CAAC;IAQ1C,CAAC;IAGD;;OAEG;IACH,8BAAQ,GAAR;QAAA,iBAcC;QAZG,IAAI,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC9B,EAAE,CAAC,CAAC,4DAAW,CAAC,UAAU,CAAC;YACvB,SAAS,GAAG,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC;QAEvC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;QAE3B,MAAM,CAAC,IAAI,CAAC,IAAI;aACX,GAAG,CAAS,SAAS,EAAE,WAAW,CAAC;aACnC,IAAI,CACD,0DAAG,CAAC,WAAC,IAAI,YAAI,CAAC,MAAM,CAAC,KAAI,CAAC,aAAa,CAAC,cAAc,CAAC,uBAAuB,CAAC,EAAE,KAAK,CAAC,EAA9E,CAA8E,CAAC,EACxF,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC,CAClD,CAAC;IACV,CAAC;IAGD;;OAEG;IACH,6BAAO,GAAP,UAAQ,EAAU;QAAlB,iBAiBC;QAhBG,IAAI,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC9B,EAAE,CAAC,CAAC,4DAAW,CAAC,UAAU,CAAC;YACvB,SAAS,GAAG,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;QAExC,oCAAoC;QAEpC,IAAM,GAAG,GAAM,SAAS,SAAI,EAAI,CAAC;QACjC,MAAM,CAAC,IAAI,CAAC,IAAI;aACX,GAAG,CAAO,GAAG,EAAE,WAAW,CAAC;aAC3B,IAAI,CACD,0DAAG,CAAC,WAAC,IAAI,YAAI,CAAC,MAAM,CAAC,KAAI,CAAC,aAAa,CAAC,sBAAsB,CAAC,2BAA2B,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EACjG,KAAK,CAAC,EADH,CACG,CAAC,EACb,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,aAAa,CAAC,sBAAsB,CAAC,2BAA2B,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC,CAC1H,CAAC;IAGV,CAAC;IAED;;OAEG;IACH,6BAAO,GAAP,UAAQ,IAAU;QAAlB,iBAaC;QAXG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;QACtC,IAAI,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC9B,EAAE,CAAC,CAAC,4DAAW,CAAC,UAAU,CAAC;YACvB,SAAS,GAAG,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC;QAE1C,MAAM,CAAC,IAAI,CAAC,IAAI;aACX,IAAI,CAAO,SAAS,EAAE,IAAI,EAAE,WAAW,CAAC;aACxC,IAAI,CACD,0DAAG,CAAC,UAAC,IAAU,IAAK,YAAI,CAAC,MAAM,CAAC,KAAI,CAAC,aAAa,CAAC,sBAAsB,CAAC,sBAAsB,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC,EAAE,MAAM,CAAC,EAA1G,CAA0G,CAAC,EAC/H,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC,CAClD,CAAC;IACV,CAAC;IAED;;OAEG;IACH,gCAAU,GAAV,UAAW,IAAU;QAArB,iBAcC;QAbG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;QACtC,IAAM,EAAE,GAAG,OAAO,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC;QACrD,IAAI,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC9B,EAAE,CAAC,CAAC,4DAAW,CAAC,UAAU,CAAC,CAAC,CAAC;YACzB,SAAS,GAAG,SAAS,GAAG,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC;YAClD,SAAS,GAAM,SAAS,SAAI,EAAI,CAAC;QACrC,CAAC;QACD,MAAM,CAAC,IAAI,CAAC,IAAI;aACX,GAAG,CAAC,SAAS,EAAE,IAAI,EAAE,WAAW,CAAC;aACjC,IAAI,CACD,0DAAG,CAAC,WAAC,IAAI,YAAI,CAAC,MAAM,CAAC,KAAI,CAAC,aAAa,CAAC,sBAAsB,CAAC,yBAAyB,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC,EAAE,KAAK,CAAC,EAA5G,CAA4G,CAAC,EACtH,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE,KAAK,CAAC,CAAC,CACpD,CAAC;IACV,CAAC;IAED,6BAAO,GAAP,UAAQ,EAAU;QAAlB,iBAYC;QAXG,IAAI,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC9B,EAAE,CAAC,CAAC,4DAAW,CAAC,UAAU,CAAC,CAAC,CAAC;YACzB,SAAS,GAAG,SAAS,GAAG,IAAI,CAAC,QAAQ,GAAG,UAAU,CAAC;YACnD,SAAS,GAAM,SAAS,SAAI,EAAI,CAAC;QACrC,CAAC;QACD,MAAM,CAAC,IAAI,CAAC,IAAI;aACX,IAAI,CAAC,SAAS,EAAE,EAAE,EAAE,WAAW,CAAC;aAChC,IAAI,CACD,0DAAG,CAAC,WAAC,IAAI,YAAI,CAAC,MAAM,CAAC,KAAI,CAAC,aAAa,CAAC,sBAAsB,CAAC,sBAAsB,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC,EAAE,KAAK,CAAC,EAApG,CAAoG,CAAC,EAC9G,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC,CACjD,CAAC;IACV,CAAC;IAED;;OAEG;IACH,gCAAU,GAAV,UAAW,IAAmB;QAA9B,iBAgBC;QAfG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;QACtC,IAAM,EAAE,GAAG,OAAO,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC;QAErD,IAAI,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC9B,EAAE,CAAC,CAAC,4DAAW,CAAC,UAAU,CAAC;YACvB,SAAS,GAAG,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC;QAE1C,IAAM,GAAG,GAAM,SAAS,SAAI,EAAI,CAAC;QAEjC,MAAM,CAAC,IAAI,CAAC,IAAI;aACX,MAAM,CAAO,GAAG,EAAE,WAAW,CAAC;aAC9B,IAAI,CACD,0DAAG,CAAC,WAAC,IAAI,YAAI,CAAC,MAAM,CAAC,KAAI,CAAC,aAAa,CAAC,sBAAsB,CAAC,wBAAwB,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC,EAAE,QAAQ,CAAC,EAAzG,CAAyG,CAAC,EACnH,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE,QAAQ,CAAC,CAAC,CACvD,CAAC;IACV,CAAC;IAED;;;;;;;OAOG;IACO,iCAAW,GAArB,UAAsB,SAAiB,EAAE,MAAc;QACnD,MAAM,CAAC,sBAAsB,GAAsB;YAC/C,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YACvB,IAAM,IAAI,GAAG,GAAG,CAAC,OAAO,IAAI,EAAE,CAAC;YAC/B,IAAM,KAAK,GAAM,IAAI,CAAC,gBAAgB,SAAI,SAAS,eAC/C,IAAI,CAAC,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,EAAE,CACrB,CAAC;YACP,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;QAC/B,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACjB,CAAC;IAES,4BAAM,GAAhB,UAAiB,OAAe,EAAE,MAAc;QAC5C,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;IACpD,CAAC;IApJQ,WAAW;QADvB,gEAAU,EAAE;yCAMS,+DAAU;YACR,gDAAM;YACC,+DAAqB;YACtB,sDAAY;OAR7B,WAAW,CAqJvB;IAAD,kBAAC;CAAA;AArJuB;;;;;;;;;;;;;ACJxB;AAAA;AAAA;IACI,kBAAmB,WAAmB,EAAS,EAAU,EAAS,SAAiB,EAAS,QAAgB,EACjG,QAAiB,EAAS,QAAgB,EAAS,UAAiB,EAAS,YAAqB,EAClG,OAAc,EACd,SAAkB,EAClB,WAAoB;QAJZ,gBAAW,GAAX,WAAW,CAAQ;QAAS,OAAE,GAAF,EAAE,CAAQ;QAAS,cAAS,GAAT,SAAS,CAAQ;QAAS,aAAQ,GAAR,QAAQ,CAAQ;QACjG,aAAQ,GAAR,QAAQ,CAAS;QAAS,aAAQ,GAAR,QAAQ,CAAQ;QAAS,eAAU,GAAV,UAAU,CAAO;QAAS,iBAAY,GAAZ,YAAY,CAAS;QAClG,YAAO,GAAP,OAAO,CAAO;QACd,cAAS,GAAT,SAAS,CAAS;QAClB,gBAAW,GAAX,WAAW,CAAS;IAC3B,CAAC;IACT,eAAC;AAAD,CAAC;;;;;;;;;;;;;ACvBD,yBAAyB,qCAAqC,cAAc,wCAAwC,WAAW,wBAAwB,QAAQ,0CAA0C,WAAW,qBAAqB,QAAQ,yCAAyC,WAAW,0BAA0B,QAAQ,0CAA0C,WAAW,oBAAoB,QAAQ,wCAAwC,WAAW,kBAAkB,QAAQ,yCAAyC,WAAW,mBAAmB,QAAQ,0CAA0C,WAAW,eAAe,C;;;;;;;;;;;ACAxnB,iCAAiC,uBAAuB,gBAAgB,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;ACCA;AAS1E;IAEE;IAAgB,CAAC;IADR;QAAR,2DAAK,EAAE;;6DAAe;IADZ,uBAAuB;QANnC,+DAAS,CAAC;YACT,QAAQ,EAAE,sBAAsB;;;YAGhC,eAAe,EAAE,qEAAuB,CAAC,MAAM;SAChD,CAAC;;OACW,uBAAuB,CAInC;IAAD,8BAAC;CAAA;AAJmC;;;;;;;;;;;;ACVpC,oPAAoP,oCAAoC,8BAA8B,MAAM,8HAA8H,8NAA8N,gCAAgC,yYAAyY,WAAW,oKAAoK,4BAA4B,sDAAsD,iBAAiB,8IAA8I,mCAAmC,sDAAsD,8DAA8D,2KAA2K,gCAAgC,sDAAsD,iBAAiB,sKAAsK,iCAAiC,qDAAqD,qDAAqD,oKAAoK,+BAA+B,qDAAqD,mDAAmD,+RAA+R,iCAAiC,kLAAkL,mCAAmC,6qBAA6qB,2BAA2B,2pB;;;;;;;;;;;ACAnsH,yBAAyB,gBAAgB,EAAE,qBAAqB,eAAe,EAAE,oBAAoB,8BAA8B,mBAAmB,EAAE,mBAAmB,uBAAuB,gBAAgB,eAAe,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAtB;AACnJ;AACmC;AACtC;AACQ;AAC5B;AAEkB;AAI8C;AAEjC;AAQlE;IAyBE,4BACU,WAAwB,EAAU,WAAwB,EAC1D,MAAc,EACd,QAAkC,EAClC,MAAiB;QAHjB,gBAAW,GAAX,WAAW,CAAa;QAAU,gBAAW,GAAX,WAAW,CAAa;QAC1D,WAAM,GAAN,MAAM,CAAQ;QACd,aAAQ,GAAR,QAAQ,CAA0B;QAClC,WAAM,GAAN,MAAM,CAAW;QA3B3B,eAAU,GAAG,IAAI,oEAAkB,EAAE,CAAC;QAG/B,gBAAW,GAAG,IAAI,CAAC;QA0BxB,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC;QACzC,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC;QACvC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,oBAAkB,IAAI,CAAC,YAAY,iBAAY,IAAI,CAAC,WAAa,CAAC,CAAC;QACnF,IAAI,CAAC,mBAAmB,EAAE,CAAC;IAC7B,CAAC;IAzBD,2CAAc,GAAd;QACE,IAAI,CAAC,WAAW,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC;IACvC,CAAC;IAMD,qCAAQ,GAAR,UAAS,KAAM;QACb,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,WAAW,CAAC;QACvC,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,UAAU,CAAC;QACrC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,sBAAoB,IAAI,CAAC,YAAY,iBAAY,IAAI,CAAC,WAAa,CAAC,CAAC;QACrF,IAAI,CAAC,mBAAmB,EAAE,CAAC;IAC7B,CAAC;IAeD,4CAAe,GAAf,UAAgB,IAAI,EAAE,EAAM;QAA5B,iBAQC;QARqB,2BAAM;QAC1B,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QACzB,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;QAC3B,IAAM,OAAO,GAA0B,IAAI,CAAC,QAAQ,CAAC,uBAAuB,CAAC,6EAAgB,CAAC,CAAC;QAC/F,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;QAChE,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,IAAI,GAAG,IAAI,CAAC;QACvC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,MAAM,GAAG,EAAE,CAAC;QACvC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,aAAa,CAAC,SAAS,CAAC,eAAK,IAAI,YAAI,CAAC,cAAc,CAAC,KAAK,CAAC,EAA1B,CAA0B,CAAC,CAAC;IAC1F,CAAC;IAED,wCAAW,GAAX;QACE,oCAAoC;QACpC,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;YACtB,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC;QAC9B,CAAC;IACH,CAAC;IAED,qCAAQ,GAAR;QACE,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QAC3C,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;IACnC,CAAC;IAED,wCAAW,GAAX,UAAY,WAAmB;QAC7B,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;IAC5D,CAAC;IAED,sCAAS,GAAT;QAAA,iBAKC;QAJC,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,SAAS,CAAC,cAAI;YACxC,KAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC;YAC5B,oBAAoB;QACtB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,uCAAU,GAAV;QACE,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;YACtB,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC;QAC9B,CAAC;IACH,CAAC;IAED,2CAAc,GAAd,UAAe,MAAM;QACnB,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAED,qCAAQ,GAAR,UAAS,EAAU;QACjB,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;IACnC,CAAC;IACD,oCAAO,GAAP,UAAQ,EAAU;QAAlB,iBAGC;QAFC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,cAAI,IAAM,KAAI,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IAExE,CAAC;IAED,uCAAU,GAAV,UAAW,IAAU;QAArB,iBAoBC;QAnBC,sCAAsC;QACtC,IAAM,YAAY,GAAG,IAAI,iEAAe,EAAE,CAAC;QAC3C,YAAY,CAAC,YAAY,GAAG,IAAI,CAAC;QACjC,YAAY,CAAC,SAAS,GAAG,IAAI,CAAC;QAC9B,YAAY,CAAC,MAAM,GAAG,OAAO,CAAC;QAC9B,YAAY,CAAC,KAAK,GAAG,OAAO,CAAC;QAC7B,YAAY,CAAC,IAAI,GAAG;YAClB,KAAK,EAAE,aAAW,IAAI,CAAC,EAAE,UAAK,IAAI,CAAC,QAAU;YAC7C,OAAO,EAAE,eAAe;SACzB,CAAC;QAEF,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,4EAAwB,EAAE,YAAY,CAAC,CAAC;QAE3E,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,gBAAM;YACtC,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;gBACX,KAAI,CAAC,UAAU,CAAC,IAAI,GAAG,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,WAAC,IAAI,QAAC,IAAI,IAAI,EAAT,CAAS,CAAC,CAAC;gBACnE,KAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,SAAS,EAAE,CAAC;YAChD,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAGD,wCAAW,GAAX,UAAY,IAAU;QACpB,MAAM,CAAC,KAAG,IAAI,CAAC,QAAU,CAAC;IAC5B,CAAC;IAID;;OAEG;IACH,gDAAmB,GAAnB;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC,CAAC,CAAC;YAC3B,IAAI,CAAC,gBAAgB,GAAG,CAAC,IAAI,EAAE,UAAU,EAAE,cAAc,EAAE,QAAQ,CAAC,CAAC;QACvE,CAAC;QACD,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,IAAI,GAAG,IAAI,IAAI,CAAC,WAAW,IAAI,GAAG,CAAC,CAAC,CAAC;YAC5D,IAAI,CAAC,gBAAgB,GAAG,CAAC,IAAI,EAAE,UAAU,EAAE,cAAc,EAAE,UAAU,EAAE,WAAW,EAAE,SAAS,EAAE,QAAQ,CAAC,CAAC;QAC3G,CAAC;QACD,IAAI,CAAC,CAAC;YACJ,IAAI,CAAC,gBAAgB,GAAG,CAAC,IAAI,EAAE,UAAU,EAAE,cAAc,EAAE,UAAU,EAAE,WAAW,EAAE,SAAS,EAAE,QAAQ,CAAC,CAAC;QAC3G,CAAC;IACH,CAAC;IA/HuD;QAAvD,+DAAS,CAAC,eAAe,EAAE,EAAE,IAAI,EAAE,8DAAgB,EAAE,CAAC;;6DAAe;IAO7C;QAAxB,+DAAS,CAAC,8DAAY,CAAC;kCAAY,8DAAY;yDAAC;IAC7B;QAAnB,+DAAS,CAAC,yDAAO,CAAC;kCAAO,yDAAO;oDAAC;IAGlC;QADC,kEAAY,CAAC,eAAe,EAAE,CAAC,QAAQ,CAAC,CAAC;;;;sDAMzC;IAvBU,kBAAkB;QAN9B,+DAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;;;SAG3B,CAAC;yCA4BuB,gEAAW,EAAuB,0DAAW;YAClD,gDAAM;YACJ,sEAAwB;YAC1B,2DAAS;OA7BhB,kBAAkB,CAuI9B;IAAD,yBAAC;CAAA;AAvI8B;;;;;;;;;;;;;;;;;;;;;;;;ACrBU;AACc;AAEgB;AAGvE,IAAM,WAAW,GAAW;IACxB,YAAY;IACZ,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,mFAAkB,EAAE;CAE9C,CAAC;AAWF;IAAA;IAAkC,CAAC;IAAtB,kBAAkB;QAT9B,8DAAQ,CAAC;YACN,OAAO,EAAE;gBACL,4DAAY,CAAC,QAAQ,CAAC,WAAW,CAAC;aACrC;YACD,OAAO,EAAE;gBACL,4DAAY;aACf;SACJ,CAAC;OAEW,kBAAkB,CAAI;IAAD,yBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrBU;AACqC;AACP;AACX;AACR;AACM;AAEW;AACf;AACF;AACc;AACE;AACH;AACG;AACA;AACoB;AACzC;AA2B/C;IAAA;IAA2B,CAAC;IAAf,WAAW;QAzBvB,8DAAQ,CAAC;YACN,OAAO,EAAE;gBACL,kEAAY,EAAE,6EAAoB,EAAE,iEAAe,EAAE,mEAAe,EAAE,6DAAY;gBAClF,2FAAmB;gBACnB,wEAAkB,EAAE,0DAAW,EAAE,kEAAmB,EAAE,6EAAa;aACtE;YACD,YAAY,EAAE;gBAEV,mFAAkB;gBAElB,8EAAgB;gBAEhB,qGAAuB;aAE1B;YACD,OAAO,EAAE,EAAE;YAEX,SAAS,EAAE;gBACP,gEAAW,EAAE,gFAAc,EAAE,gFAAc;aAC9C;YACD,eAAe,EAAE,CAAC,8EAAgB;aAEjC;SACJ,CAAC;OAEW,WAAW,CAAI;IAAD,kBAAC;CAAA;AAAJ","file":"features-tasks-tasks-module.js","sourcesContent":["module.exports = \"<mat-card class=\\\"small-card \\\">\\n  <mat-toolbar color=\\\"primary\\\" layout=\\\"fill\\\">\\n    {{ title }}\\n  </mat-toolbar>\\n\\n  <div>\\n    <mat-horizontal-stepper [linear]=\\\"true\\\" #stepper>\\n\\n      <mat-step [stepControl]=\\\"taskForm\\\">\\n        <ng-template matStepLabel>{{'ADD_EDIT_TASK_PG.TASK_INFO' | translate}}</ng-template>\\n        <form [formGroup]=\\\"taskForm\\\">\\n          <div>\\n            <mat-form-field>\\n              <input matInput placeholder=\\\"{{'ADD_EDIT_TASK_PG.PROJECT' | translate}}\\\" [required]=\\\"false\\\" readonly\\n                [value]=\\\"projectName\\\" formControlName=\\\"projectName\\\">\\n              <mat-icon matSuffix color=\\\"primary\\\" (click)=\\\"openProjectsDataDialog(true)\\\">search</mat-icon>\\n            </mat-form-field>\\n\\n          </div>\\n\\n          <mat-form-field class=\\\"example-full-width\\\">\\n            <input matInput placeholder=\\\"{{'ADD_EDIT_TASK_PG.TASK_NAME' | translate}}\\\" formControlName=\\\"taskName\\\"\\n              required>\\n          </mat-form-field>\\n          <mat-checkbox (change)='checkChangeEvent()' formControlName='isParentChecked' color='primary'>\\n            {{'ADD_EDIT_TASK_PG.ISPARENT' | translate}}\\n          </mat-checkbox>\\n\\n          <mat-form-field class=\\\"\\\">\\n            <input formControlName=\\\"startDate\\\" [readOnly]=\\\"isDisabled\\\" matInput [matDatepicker]=\\\"picker\\\"\\n              placeholder=\\\"  {{'ADD_EDIT_TASK_PG.STARTDATE' | translate}}\\\">\\n            <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n            <mat-datepicker startView=\\\"year\\\" #picker></mat-datepicker>\\n          </mat-form-field>\\n\\n          <mat-form-field class=\\\"\\\">\\n            <input formControlName=\\\"endDate\\\" [readOnly]=\\\"isDisabled\\\" matInput [matDatepicker]=\\\"picker2\\\"\\n              placeholder=\\\"  {{'ADD_EDIT_TASK_PG.ENDDATE' | translate}}\\\">\\n            <mat-datepicker-toggle matSuffix [for]=\\\"picker2\\\"></mat-datepicker-toggle>\\n            <mat-datepicker #picker2 startView=\\\"year\\\" [startAt]=\\\"startDate\\\"></mat-datepicker>\\n          </mat-form-field>\\n\\n          <div> {{'ADD_EDIT_TASK_PG.PRIORITY' | translate}}\\n            <mat-slider formControlName=\\\"priority\\\" (input)=\\\"priority = $event.value\\\" step=\\\"1\\\" min=\\\"0\\\" max=\\\"5\\\"\\n              thumbLabel=true [value]=\\\"priority\\\">\\n            </mat-slider>\\n          </div>\\n          <div>\\n            <mat-form-field>\\n              <input matInput placeholder=\\\" {{'ADD_EDIT_TASK_PG.TASK_USER' | translate}}\\\" [required]=\\\"false\\\" readonly\\n                [value]=\\\"userfullName\\\" formControlName=\\\"user\\\">\\n              <mat-icon matSuffix color=\\\"primary\\\" (click)=\\\"openUserDataDialog(true)\\\">search</mat-icon>\\n            </mat-form-field>\\n\\n          </div>\\n        </form>\\n\\n        <div>\\n          <button mat-raised-button matStepperNext type=\\\"button\\\" matTooltip=\\\"Next Step\\\"\\n            class=\\\"btn-primary\\\">{{'STEPPERS.NEXT' | translate}}</button>\\n        </div>\\n      </mat-step>\\n\\n      <!-- Result Form for Step 4 -->\\n      <mat-step>\\n        <ng-template matStepLabel>{{'ADD_EDIT_TASK_PG.REVIEW' | translate}}</ng-template>\\n        <app-task-result-form [formData]=\\\"getTask()\\\"></app-task-result-form>\\n        <div class=\\\"top-15\\\">\\n          <button mat-raised-button matStepperPrevious>{{'STEPPERS.PREIVIOUS' | translate}}</button>&nbsp;\\n          <button class=\\\"btn-success\\\" mat-raised-button cdkFocusInitial\\n            (click)=\\\"save()\\\">{{'ADD_EDIT_TASK_PG.SAVE' | translate}}</button>\\n        </div>\\n      </mat-step>\\n\\n    </mat-horizontal-stepper>\\n  </div>\\n</mat-card>\"","module.exports = \".center {\\n  width: 100%; }\\n\\n.main-div {\\n  width: 80%;\\n  margin: 20px;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center; }\\n\\n.small-card {\\n  max-width: 600px;\\n  margin: auto;\\n  width: 60%;\\n  padding: 5px; }\\n\"","import { Component, Input, EventEmitter, Output, ViewChild, OnInit, ChangeDetectionStrategy } from '@angular/core';\nimport { MatInputModule, MatDialog, MatDialogRef } from '@angular/material';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { filter, map, isEmpty } from 'rxjs/operators';\nimport { ValidationErrors, ValidatorFn, FormBuilder, FormGroup, Validators } from '@angular/forms'\nimport { DataDialogComponent } from '@app/shared/dialogs';\nimport { managerModel } from '../../../shared/models/managerModel';\nimport { Logger } from '@app/core';\nimport { Router } from '@angular/router';\nimport { ContactService } from '../../contacts/shared/contact.service';\nimport { Project, ProjectInfo, Manager } from '../../projects/shared/project'\nimport { Task, TaskInfo } from '../shared/task';\nimport { TaskService } from '../shared/task.service';\nimport { Observable } from 'rxjs';\nimport { ProjectService } from '../../projects/shared/project.service';\nimport { projectInfoModel } from '../../../shared/models/projectInfoModel';\nimport { SharedFunctionService } from '../../../core/shared-function.service';\n\n@Component({\n  selector: 'app-new-task',\n  templateUrl: './new-task.component.html',\n  styleUrls: ['./new-task.component.scss']\n})\nexport class NewTaskComponent implements OnInit {\n  @Input() taskForm: FormGroup;\n  @ViewChild('stepper') stepper;\n  public isChecked: false; public priority: number = 0;\n  title = '';\n  @Input() type: string;\n  @Output() sentTaskEvent = new EventEmitter<any>();\n  public users: managerModel[];\n  public projects: projectInfoModel[];\n  public userfullName: string = '';\n  public projectName: string = '';\n  public selectedUser: Manager = new Manager();\n  public selectedProject: projectInfoModel = new projectInfoModel();\n  public retSelectedUser: any;\n  public retSelectedProject: any;\n  userDataDialog: MatDialogRef<DataDialogComponent>;\n  projectDataDialog: MatDialogRef<DataDialogComponent>;\n  public task: Task;\n  @Input() taskId: number = 0;\n  isDisabled = false;\n  public startDate: Date = new Date();\n\n  constructor(private formBuilder: FormBuilder, private router: Router,\n    private taskService: TaskService, private dialog: MatDialog,\n    private contactService: ContactService,\n    private projectService: ProjectService, private sharedService: SharedFunctionService,\n    private logger: Logger) {\n    this.task = this.createTaskStructure(this.taskId);\n    this.buildTaskForm();\n    this.getProjectManager();\n    this.getProjectsInfo()\n  }\n  ngOnInit() {\n\n    if (this.taskId > 0)\n      this.taskService.getTask(this.taskId).subscribe(data => {\n        this.task = data;\n        if (this.taskId > 0 && this.task.contactId != null && this.task.contactId > 0) {\n          this.selectedUser = (this.users.filter(x => x.id === this.task.contactId))[0];\n        }\n\n\n        if (this.taskId > 0 && this.task.projectId != null && this.task.projectId > 0) {\n          this.selectedProject = (this.projects.filter(x => x.id === this.task.projectId))[0];\n        }\n\n        this.buildTaskForm();\n      });\n    this.title = this.sharedService.getTranslationWithData('ADD_EDIT_TASK_PG.TITLE', { value: this.type });\n  }\n\n  buildTaskForm(): void {\n\n    this.taskForm = this.formBuilder.group({\n      'id': [this.task.id],\n      'taskName': [this.task.taskName, Validators.required],\n      'isParentChecked': [this.task.isParent],\n      'startDate': [this.task.startDate],\n      'parentTaskId': [this.task.parentTaskId],\n      'endDate': [this.task.endDate],\n      'priority': [this.task.priority],\n      'user': [this.selectedUser.fullName],\n      'contactId': [this.selectedUser.id],\n      'projectId': [this.selectedProject.id],\n      'projectName': [this.selectedProject.projectName],\n    });\n    //this.projectForm.setValidators(this.comparisonValidator())\n  }\n  getProjectsInfo() {\n    this.projectService.getProjectsInfo()\n      .subscribe(data => {\n        this.projects = (data);\n        console.log(this.projects);\n      });\n\n  }\n  getProjectManager() {\n    this.contactService.getProjectManager()\n      .subscribe(data => {\n        this.users = (data);\n      });\n  }\n\n  createTaskStructure(id: number): TaskInfo {\n    let taskInfo = new TaskInfo('', id, null, '', false, '', null, null, null, null, '');\n    return taskInfo;\n  }\n\n  getTask(): Task {\n    return {\n      ...this.taskForm.value,\n    };\n  }\n\n  checkChangeEvent() {\n    this.isDisabled = !this.isDisabled;\n    if (this.isDisabled) {\n      this.taskForm.controls['startDate'].setValue('');\n      this.taskForm.controls['endDate'].setValue('');\n    }\n    return;\n  }\n\n\n  //Open Dialog box and pass parameter \n  openUserDataDialog(isAdd: boolean) {\n    if (isAdd) {\n      //this.selectedManager = null;\n    }\n    this.userDataDialog = this.dialog.open(DataDialogComponent, {\n      data: { fillData: this.users, selectedOne: this.selectedUser, dialogTitle: \"Select User\" }, disableClose: true, width: '400px', height: '500px'\n    });\n    this.userDataDialog.afterClosed().pipe()\n      .subscribe\n      (result => {\n        this.retSelectedUser = result;\n        if (Object.keys(result).length > 0 && this.retSelectedUser !== null && this.retSelectedUser !== undefined) {\n          this.selectedUser = this.retSelectedUser;\n          this.userfullName = this.retSelectedUser.fullName; // assing first from array \n          this.taskForm.controls['contactId'].setValue(this.selectedUser.id);\n          this.taskForm.controls['user'].setValue(this.selectedUser.fullName);\n        }\n      });\n  }\n\n  invalidForms(): boolean {\n    return (this.taskForm.invalid\n    );\n  }\n\n  save() {\n    if (this.invalidForms())\n      return;\n\n    const newTask = this.getTask();\n    this.logger.log(`New Task: ${newTask}`);\n\n    if (this.task.id > 0) {\n      this.taskService.updateTask(newTask).subscribe(result => {\n        // if (result) {\n        this.taskForm.reset();\n        this.sentTaskEvent.emit('');\n        //}\n      });\n    }\n    else {\n      newTask.id = undefined;\n\n      this.taskService.addTask(newTask).subscribe(result => {\n        //  if (result) {\n        this.taskForm.reset();\n        this.sentTaskEvent.emit('');\n        // this.reset();\n        // go to Contace List page\n        // this.router.navigate(['/']);\n        // }\n      });\n    }\n  }\n\n  openProjectsDataDialog(isAdd: boolean) {\n    if (isAdd) {\n      //this.selectedManager = null;\n    }\n    this.projectDataDialog = this.dialog.open(DataDialogComponent, {\n      data: { fillData: this.projects, selectedOne: this.selectedProject, isProject: true, dialogTitle: \"Select Project\" },\n      disableClose: true, width: '400px', height: '500px'\n    });\n    this.projectDataDialog.afterClosed().pipe()\n      .subscribe\n      (result => {\n        this.retSelectedProject = result;\n        if (Object.keys(result).length && this.retSelectedProject !== null && this.retSelectedProject !== undefined) {\n          this.selectedProject = this.retSelectedProject;\n          this.projectName = this.retSelectedProject.projectName; // assing first from array \n          this.taskForm.controls['projectId'].setValue(this.selectedProject.id);\n          this.taskForm.controls['projectName'].setValue(this.selectedProject.projectName);\n        }\n\n      });\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { catchError, tap, map } from 'rxjs/operators';\nimport { Observable } from 'rxjs/Observable';\n\n//import { environment } from '../../../../environments/environment';\n//import { Logger } from '../../../core/logger/logger.service';\nimport { environment } from '@env/environment';\nimport { Logger } from '@app/core';\nimport { ToastService } from '@app/core';\n\nimport { Task } from './task';\nimport { SharedFunctionService } from '../../../core';\nimport { managerModel } from '../../../shared/models/managerModel';\n\nconst httpOptions = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json', 'TOKEN': environment.token })\n};\n\n@Injectable()\nexport class TaskService {\n    private baseUrl = environment.restApi;\n    private tasksUrl = `${this.baseUrl}Tasks`;\n\n    constructor(\n        private http: HttpClient,\n        private logger: Logger,\n        private sharedService: SharedFunctionService,\n        private toastService: ToastService) {\n\n    }\n\n\n    /** \n     * GET: get all contacts from the database \n     */\n    getTasks(): Observable<any> {\n\n        let UrlAction = this.tasksUrl;\n        if (environment.production)\n            UrlAction = this.tasksUrl + \"/All\";\n\n        this.logger.log(UrlAction);\n\n        return this.http\n            .get<Task[]>(UrlAction, httpOptions)\n            .pipe(\n                tap(_ => this.notify(this.sharedService.getTranslation('TASK_PG.GET_TASKS_MSG'), 'GET')),\n                catchError(this.handleError('getTasks', 'GET'))\n            );\n    }\n\n\n    /** \n     * GET: get an existing contact from the database by an id \n     */\n    getTask(id: number): Observable<any> {\n        let UrlAction = this.tasksUrl;\n        if (environment.production)\n            UrlAction = this.tasksUrl + \"/Task\";\n\n        // const url = `${UrlAction}/${id}`;\n\n        const url = `${UrlAction}/${id}`;\n        return this.http\n            .get<Task>(url, httpOptions)\n            .pipe(\n                tap(_ => this.notify(this.sharedService.getTranslationWithData('TASK_PG.FEATCH_TASK_BY_ID', { id: id })\n                    , 'GET')),\n                catchError(this.handleError(this.sharedService.getTranslationWithData('TASK_PG.FEATCH_TASK_BY_ID', { id: id }), 'GET'))\n            );\n\n\n    }\n\n    /** \n     * POST: add a new contact to the database \n     */\n    addTask(task: Task): Observable<any> {\n\n        this.logger.log(JSON.stringify(task));\n        let UrlAction = this.tasksUrl;\n        if (environment.production)\n            UrlAction = this.tasksUrl + \"/Create\";\n\n        return this.http\n            .post<Task>(UrlAction, task, httpOptions)\n            .pipe(\n                tap((task: Task) => this.notify(this.sharedService.getTranslationWithData('TASK_PG.ADD_TASK_MSG', { value: task.id }), 'POST')),\n                catchError(this.handleError('addTask', 'POST'))\n            );\n    }\n\n    /** \n     * PUT: update an existing contact to the database \n     */\n    updateTask(task: Task): Observable<any> {\n        this.logger.log(JSON.stringify(task));\n        const id = typeof task === 'number' ? task : task.id;\n        let UrlAction = this.tasksUrl;\n        if (environment.production) {\n            UrlAction = UrlAction = this.tasksUrl + \"/Update\";\n            UrlAction = `${UrlAction}/${id}`;\n        }\n        return this.http\n            .put(UrlAction, task, httpOptions)\n            .pipe(\n                tap(_ => this.notify(this.sharedService.getTranslationWithData('TASK_PG.UPDATE_TASK_MSG', { value: task.id }), 'PUT')),\n                catchError(this.handleError('updateTask', 'PUT'))\n            );\n    }\n\n    endTask(id: number): Observable<any> {\n        let UrlAction = this.tasksUrl;\n        if (environment.production) {\n            UrlAction = UrlAction = this.tasksUrl + \"/EndTask\";\n            UrlAction = `${UrlAction}/${id}`;\n        }\n        return this.http\n            .post(UrlAction, id, httpOptions)\n            .pipe(\n                tap(_ => this.notify(this.sharedService.getTranslationWithData('TASK_PG.END_TASK_MSG', { value: id }), 'PUT')),\n                catchError(this.handleError('EndTask', 'PUT'))\n            );\n    }\n\n    /** \n     * DELETE: delete an existing hero from the database \n     */\n    deleteTask(task: Task | number): Observable<any> {\n        this.logger.log(JSON.stringify(task));\n        const id = typeof task === 'number' ? task : task.id;\n\n        let UrlAction = this.tasksUrl;\n        if (environment.production)\n            UrlAction = this.tasksUrl + \"/Remove\";\n\n        const url = `${UrlAction}/${id}`;\n\n        return this.http\n            .delete<Task>(url, httpOptions)\n            .pipe(\n                tap(_ => this.notify(this.sharedService.getTranslationWithData('TASK_PG.DELTE_TASK_MSG', { value: id }), 'DELETE')),\n                catchError(this.handleError('deleteTask', 'DELETE'))\n            );\n    }\n\n    /**\n     * Prepare an error handler for failed HTTP requests.\n     * That handler extracts the error message and logs it.\n     * It also adds the message to the errors$ observable to which the caller\n     * may listen and react.\n     * @param operation The name/description of the operation that failed\n     * @param method The HTTP method for the failed HTTP request\n     */\n    protected handleError(operation: string, method: string) {\n        return function errorHandler(res: HttpErrorResponse) {\n            this.logger.error(res);\n            const eMsg = res.message || '';\n            const error = `${this.entityNamePlural} ${operation} Error${\n                eMsg ? ': ' + eMsg : ''\n                }`;\n            this.notify(error, method);\n        }.bind(this);\n    }\n\n    protected notify(message: string, method: string) {\n        this.toastService.openSnackBar(message, method);\n    }\n}\n","export interface Task {\n    id: number;\n    projectId: number;\n    projectName: string;\n    taskName: string;\n    isParent: boolean;\n    parentTaskId?: number;\n    startDate?: Date;\n    endDate?: Date;\n    priority: string;\n    contactId?: number;\n    contactName?: string;\n}\n\n\n\nexport class TaskInfo implements Task {\n    constructor(public projectName: string, public id: number, public projectId: number, public taskName: string,\n        public isParent: boolean, public priority: string, public startdDate?: Date, public parentTaskId?: number,\n        public endDate?: Date,\n        public contactId?: number,\n        public contactName?: string\n    ) { }\n}\n\n\n\n\n\n","module.exports = \"<h4> {{'STEPPERS.REVIEW_TITLE' | translate}} </h4>\\n<h4>{{'ADD_EDIT_TASK_PG.PROJECT' | translate}}: </h4>\\n{{ formData.projectName }}\\n<h4>{{'ADD_EDIT_TASK_PG.TASK_NAME' | translate}}: </h4>\\n{{ formData.taskName }}\\n<h4>{{'ADD_EDIT_TASK_PG.ISPARENT' | translate}}: </h4>\\n{{formData.isParentChecked}}\\n<h4>{{'ADD_EDIT_TASK_PG.STARTDATE' | translate}}: </h4>\\n{{formData.startDate}}\\n<h4>{{'ADD_EDIT_TASK_PG.ENDDATE' | translate}}: </h4>\\n{{formData.endDate}}\\n<h4>{{'ADD_EDIT_TASK_PG.PRIORITY' | translate}}: </h4>\\n{{formData.priority}}\\n<h4>{{'ADD_EDIT_TASK_PG.TASK_USER' | translate}}: </h4>\\n{{formData.user}}\"","module.exports = \".button-right {\\n  position: absolute;\\n  right: 15px; }\\n\"","\nimport { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\n\n@Component({\n  selector: 'app-task-result-form',\n  templateUrl: './task-result-form.component.html',\n  styleUrls: ['./task-result-form.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TaskResultFormComponent {\n  @Input() formData: any;\n  constructor() { }\n\n}\n\n\n","module.exports = \"<div layout=\\\"row\\\" layout-align=\\\"space-between center\\\" flex class=\\\"layout-align-space-between-center layout-row flex\\\">\\n  <mat-form-field>\\n    <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"{{'TASK_PG.SEARCH_TASKS' | translate}}\\\">\\n  </mat-form-field>&nbsp;&nbsp;\\n\\n  <!-- <button class=\\\"btn-secondary\\\" mat-mini-fab matTooltip=\\\"Add a Task\\\">\\n        <mat-icon (click)=\\\"loadAddTask();\\\" aria-label=\\\"add Task\\\">add</mat-icon> Add Task\\n    </button> -->\\n\\n\\n  <button mat-raised-button color=\\\"accent\\\" (click)=\\\"createComponent('Add',0)\\\">\\n    <mat-icon aria-label=\\\"add task\\\">work_outline</mat-icon>{{'TASK_PG.ADD_TASK' | translate}}\\n  </button>\\n</div>\\n\\n<div class=\\\"basic-container mat-elevation-z8\\\">\\n  <table mat-table [dataSource]=\\\"dataSource\\\" matSort matSortActive=\\\"id\\\" matSortDirection=\\\"desc\\\" matSortDisableClear>\\n\\n    <!-- Id Column -->\\n    <ng-container matColumnDef=\\\"id\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header disableClear>ID</th>\\n      <td mat-cell *matCellDef=\\\"let task\\\">{{ task.id }}</td>\\n    </ng-container>\\n\\n    <!-- Name Column -->\\n    <ng-container matColumnDef=\\\"taskName\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>{{'TASK_PG.NAME' | translate}} </th>\\n      <td mat-cell *matCellDef=\\\"let task\\\">{{ task.taskName }}</td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"parentTaskId\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>{{'TASK_PG.PARENT_TASK' | translate}} </th>\\n      <td mat-cell *matCellDef=\\\"let task\\\">{{ task.parentTaskId !== null ? task.parentTaskId :'No Parent'}}</td>\\n    </ng-container>\\n\\n\\n    <!-- Work Type Column -->\\n    <ng-container matColumnDef=\\\"priority\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>{{'TASK_PG.PRIORITY' | translate}} </th>\\n      <td mat-cell *matCellDef=\\\"let task\\\">{{ task.priority }}</td>\\n    </ng-container>\\n\\n    <!-- State Column -->\\n    <ng-container matColumnDef=\\\"startDate\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>{{'TASK_PG.STARTDATE' | translate}}</th>\\n      <td mat-cell *matCellDef=\\\"let task\\\">{{ task.startDate | formatDateText: 28: 'MM-dd-yyyy' }}</td>\\n    </ng-container>\\n\\n    <!-- State Column -->\\n    <ng-container matColumnDef=\\\"endDate\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>{{'TASK_PG.ENDDATE' | translate}}</th>\\n      <td mat-cell *matCellDef=\\\"let task\\\">{{ task.endDate | formatDateText: 28: 'MM-dd-yyyy' }}</td>\\n    </ng-container>\\n\\n\\n    <!-- Action Column -->\\n    <ng-container matColumnDef=\\\"action\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Action</th>\\n      <td mat-cell *matCellDef=\\\"let task\\\">\\n        <button mat-icon-button color=\\\"accent\\\" matTooltip=\\\"{{'TASK_PG.EDIT_TASK' | translate}}\\\">\\n          <mat-icon (click)=\\\"editTask(task.id)\\\" aria-label=\\\"edit task\\\">edit</mat-icon>\\n        </button>\\n        <button mat-icon-button color=\\\"warn\\\" matTooltip=\\\"{{'TASK_PG.DELETE_TASK' | translate}}\\\">\\n          <mat-icon (click)=\\\"deleteTask(task)\\\" aria-label=\\\"delete task\\\">delete_forever</mat-icon>\\n        </button>\\n        <button *ngIf=\\\"task.status > 0\\\" mat-icon-button color=\\\"warn\\\" matTooltip=\\\"suspended task\\\">\\n          <mat-icon aria-label=\\\"suspended task\\\">block</mat-icon>\\n        </button>\\n        <button *ngIf=\\\"task.status == 0\\\" mat-icon-button color=\\\"warn\\\" matTooltip=\\\"suspend task\\\">\\n          <mat-icon (click)=\\\"endTask(task.id)\\\" aria-label=\\\"suspend task\\\">play_arrow</mat-icon>\\n        </button>\\n      </td>\\n    </ng-container>\\n\\n\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n\\n  </table>\\n  <mat-paginator [pageSizeOptions]=\\\"[5, 10]\\\" showFirstLastButtons></mat-paginator>\\n</div>\\n<br />\\n\\n\\n<div layout=\\\"row\\\" [hidden]=\\\"hideAddTask\\\" layout-align=\\\"space-between center\\\" flex\\n  class=\\\"layout-align-space-between-center layout-row flex\\\">\\n  <button mat-mini-fab color=\\\"accent\\\" (click)=\\\"closeClick()\\\" class=\\\"button-right\\\">\\n    <mat-icon class=\\\"mat-24\\\">close</mat-icon>\\n  </button>\\n  <div class=\\\"basic-container mat-elevation-z8\\\">\\n\\n    <mat-card class=\\\"z-depth center\\\" flex=\\\"90\\\">\\n\\n      <template #taskContainer (sentTaskEvent)=\\\"receiveSuccess($event)\\\"></template>\\n\\n    </mat-card>\\n  </div>\\n</div>\"","module.exports = \"table {\\n  width: 100%; }\\n\\n.mat-form-field {\\n  width: 50%; }\\n\\n.btn-secondary {\\n  background-color: #ffd740;\\n  color: #000000; }\\n\\n.button-right {\\n  position: absolute;\\n  right: 45px;\\n  z-index: 1; }\\n\"","import { Component, HostListener, OnInit, ViewChild, Input, EventEmitter, Output, ChangeDetectionStrategy, ViewContainerRef, ComponentRef, ComponentFactory, ComponentFactoryResolver } from '@angular/core';\nimport { MatPaginator, MatSort } from '@angular/material';\nimport { MatDialog, MatDialogConfig, MatDialogRef, MatInputModule } from '@angular/material';\nimport { MatTableDataSource } from '@angular/material';\nimport { ConfirmedDialogComponent } from '@app/shared/dialogs';\nimport { Logger } from '@app/core';\nimport { Task } from '../shared/task';\nimport { TaskService } from '../shared/task.service';\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { filter, map } from 'rxjs/operators';\nimport { ValidationErrors, ValidatorFn, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { NewTaskComponent } from '../new-task/new-task.component';\n\n@Component({\n  selector: 'app-tasks-list',\n  templateUrl: './tasks-list.component.html',\n  styleUrls: ['./tasks-list.component.scss']\n})\n\nexport class TasksListComponent implements OnInit {\n  displayedColumns: string[];\n  dataSource = new MatTableDataSource();\n  screenHeight: any;\n  screenWidth: any;\n  public hideAddTask = true;\n\n  @ViewChild(\"taskContainer\", { read: ViewContainerRef }) taskContainer;\n  componentRef: ComponentRef<any>;\n\n  loadAddContact() {\n    this.hideAddTask = !this.hideAddTask;\n  }\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  @HostListener('window:resize', ['$event'])\n  onResize(event?) {\n    this.screenHeight = window.innerHeight;\n    this.screenWidth = window.innerWidth;\n    this.logger.log(`Resize() height: ${this.screenHeight}; width: ${this.screenWidth}`);\n    this.setDisplayedColumns();\n  }\n\n  constructor(\n    private taskService: TaskService, private formBuilder: FormBuilder,\n    private logger: Logger,\n    private resolver: ComponentFactoryResolver,\n    private dialog: MatDialog) {\n\n    this.screenHeight = window.screen.height;\n    this.screenWidth = window.screen.width;\n    this.logger.log(`Init() height: ${this.screenHeight}; width: ${this.screenWidth}`);\n    this.setDisplayedColumns();\n  }\n\n\n  createComponent(type, id = 0) {\n    this.hideAddTask = false;\n    this.taskContainer.clear();\n    const factory: ComponentFactory<any> = this.resolver.resolveComponentFactory(NewTaskComponent);\n    this.componentRef = this.taskContainer.createComponent(factory);\n    this.componentRef.instance.type = type;\n    this.componentRef.instance.taskId = id;\n    this.componentRef.instance.sentTaskEvent.subscribe(event => this.receiveSuccess(event));\n  }\n\n  ngOnDestroy() {\n    //   console.log(this.componentRef);\n    if (this.componentRef) {\n      this.componentRef.destroy();\n    }\n  }\n\n  ngOnInit() {\n    this.loadTasks();\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n  loadTasks() {\n    this.taskService.getTasks().subscribe(data => {\n      this.dataSource.data = data;\n      //console.log(data);\n    });\n  }\n\n  closeClick() {\n    this.hideAddTask = true;\n    if (this.componentRef) {\n      this.componentRef.destroy();\n    }\n  }\n\n  receiveSuccess($event) {\n    this.loadTasks();\n    this.closeClick();\n  }\n\n  editTask(id: number): void {\n    this.createComponent('Edit', id);\n  }\n  endTask(id: number) {\n    this.taskService.endTask(id).subscribe(data => { this.loadTasks(); });\n\n  }\n\n  deleteTask(task: Task): void {\n    // Create configuration for the dialog\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = true;\n    dialogConfig.autoFocus = true;\n    dialogConfig.height = '200px';\n    dialogConfig.width = '400px';\n    dialogConfig.data = {\n      title: `Delete  ${task.id}- ${task.taskName}`,\n      message: 'Are you sure?'\n    };\n\n    const dialogRef = this.dialog.open(ConfirmedDialogComponent, dialogConfig);\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.dataSource.data = this.dataSource.data.filter(e => e != task);\n        this.taskService.deleteTask(task).subscribe();\n      }\n    });\n  }\n\n\n  getFullName(task: Task): string {\n    return `${task.taskName}`;\n  }\n\n\n\n  /**\n   * Update a list of table columns to be displayed based on the width of the screen.\n   */\n  setDisplayedColumns() {\n    if (this.screenWidth < 420) {\n      this.displayedColumns = ['id', 'taskName', 'parentTaskId', 'action'];\n    }\n    else if (this.screenWidth >= 420 && this.screenWidth <= 800) {\n      this.displayedColumns = ['id', 'taskName', 'parentTaskId', 'priority', 'startDate', 'endDate', 'action'];\n    }\n    else {\n      this.displayedColumns = ['id', 'taskName', 'parentTaskId', 'priority', 'startDate', 'endDate', 'action'];\n    }\n  }\n}\n\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { TasksListComponent } from './tasks-list/tasks-list.component';\n\n\nconst tasksRoutes: Routes = [\n    // 1st Route\n    { path: '', component: TasksListComponent },\n\n];\n\n@NgModule({\n    imports: [\n        RouterModule.forChild(tasksRoutes)\n    ],\n    exports: [\n        RouterModule,\n    ]\n})\n\nexport class TasksRoutingModule { }","import { NgModule } from '@angular/core';\nimport { MaterialFormsModule } from '@app/shared/forms/material-forms.module';\nimport { TasksListComponent } from './tasks-list/tasks-list.component';\nimport { TasksRoutingModule } from './tasks-routing.module';\nimport { TaskService } from './shared/task.service';\nimport { SharedModule } from '../../shared/shared.module';\nimport { FormatDateTextPipe } from '../../shared/format-date-text.pipe';\nimport { AppSharedPipesModule } from '../../shared/app-shared-pipes';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { MatDialogModule } from '@angular/material';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { DialogsModule } from '../../shared/dialogs/dialogs.module';\nimport { NewTaskComponent } from './new-task/new-task.component';\nimport { ContactService } from '../contacts/shared/contact.service';\nimport { ProjectService } from '../projects/shared/project.service';\nimport { TaskResultFormComponent } from './task-result-form/task-result-form.component';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n    imports: [\n        SharedModule, AppSharedPipesModule, MatDialogModule, TranslateModule, CommonModule,\n        MaterialFormsModule,\n        TasksRoutingModule, FormsModule, ReactiveFormsModule, DialogsModule\n    ],\n    declarations: [\n\n        TasksListComponent,\n\n        NewTaskComponent,\n\n        TaskResultFormComponent,\n\n    ],\n    exports: [],\n\n    providers: [\n        TaskService, ContactService, ProjectService\n    ],\n    entryComponents: [NewTaskComponent\n\n    ]\n})\n\nexport class TasksModule { }\n"],"sourceRoot":""}