{"version":3,"sources":["webpack:///./src/app/features/projects/new-project/add-project.component.html","webpack:///./src/app/features/projects/new-project/add-project.component.scss","webpack:///./src/app/features/projects/new-project/add-project.component.ts","webpack:///./src/app/features/projects/projects-list/projects-list.component.html","webpack:///./src/app/features/projects/projects-list/projects-list.component.scss","webpack:///./src/app/features/projects/projects-list/projects-list.component.ts","webpack:///./src/app/features/projects/projects-routing.module.ts","webpack:///./src/app/features/projects/projects.module.ts"],"names":[],"mappings":";;;;;;;;;AAAA,kLAAkL,SAAS,uUAAuU,4CAA4C,qTAAqT,4CAA4C,oRAAoR,uCAAuC,uUAAuU,0CAA0C,6nBAA6nB,wCAAwC,sXAAsX,yCAAyC,wbAAwb,+CAA+C,smBAAsmB,6BAA6B,+MAA+M,uCAAuC,8OAA8O,kCAAkC,eAAe,gJAAgJ,qCAAqC,mK;;;;;;;;;;;ACAn7I,2BAA2B,gBAAgB,EAAE,eAAe,eAAe,iBAAiB,kBAAkB,4BAA4B,wBAAwB,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACK1G;AACE;AAG8B;AACvD;AACiC;AAC3B;AAE8B;AAEN;AACN;AAEmB;AAU9E;IAqBE,6BAAoB,WAAwB,EAAU,MAAc,EAC1D,cAA8B,EAAU,MAAiB,EACzD,cAA8B,EAC9B,aAAoC,EACpC,MAAc;QAJJ,gBAAW,GAAX,WAAW,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;QAC1D,mBAAc,GAAd,cAAc,CAAgB;QAAU,WAAM,GAAN,MAAM,CAAW;QACzD,mBAAc,GAAd,cAAc,CAAgB;QAC9B,kBAAa,GAAb,aAAa,CAAuB;QACpC,WAAM,GAAN,MAAM,CAAQ;QApBxB,YAAO,GAAG,IAAI,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAC/B,YAAO,GAAG,IAAI,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAE/B,UAAK,GAAG,EAAE,CAAC;QAED,kBAAa,GAAG,IAAI,0DAAY,EAAO,CAAC;QAE3C,oBAAe,GAAW,EAAE,CAAC;QAC7B,oBAAe,GAAY,IAAI,uDAAO,EAAE,CAAC;QAEvC,cAAS,GAAW,CAAC,CAAC;QAG/B,eAAU,GAAG,IAAI,CAAC;QACX,aAAQ,GAAW,CAAC,CAAC;QAQ1B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAC3D,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACpC,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC3B,CAAC;IACD,sCAAQ,GAAR;QAAA,iBAeC;QAbC,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;YACrB,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,cAAI;gBAC3D,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC;gBACpB,sEAAsE;gBACtE,EAAE,CAAC,CAAC,KAAI,CAAC,SAAS,GAAG,CAAC,IAAI,KAAI,CAAC,OAAO,CAAC,SAAS,IAAI,IAAI,IAAI,KAAI,CAAC,OAAO,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC,CAAC;oBACvF,KAAI,CAAC,eAAe,GAAG,CAAC,KAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,WAAC,IAAI,QAAC,CAAC,EAAE,IAAI,KAAI,CAAC,OAAO,CAAC,SAAS,EAA9B,CAA8B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACxF,CAAC;gBACD,KAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;gBAC5B,KAAI,CAAC,UAAU,GAAG,CAAC,KAAI,CAAC,OAAO,CAAC,SAAS,CAAC;YAC5C,CAAC,CAAC,CAAC;QAEL,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC,sBAAsB,CAAC,wBAAwB,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;QACvG,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC1B,CAAC;IACD,sCAAQ,GAAR,UAAS,MAAa;QACpB,IAAI,CAAC,UAAU,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC;QACnC,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;YACpB,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;YACpD,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;QACpD,CAAC;QACD,MAAM,CAAC;IACT,CAAC;IACD,oDAAsB,GAAtB,UAAuB,EAAU;QAC/B,IAAI,OAAO,GAAG,IAAI,2DAAW,CAAC,EAAE,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;QACnE,MAAM,CAAC,OAAO,CAAC;IACjB,CAAC;IACD,wCAAU,GAAV;QACE,MAAM,cACD,IAAI,CAAC,WAAW,CAAC,KAAK,EACzB;IACJ,CAAC;IACD,+CAAiB,GAAjB;QAAA,iBASC;QAPC,IAAI,CAAC,cAAc,CAAC,iBAAiB,EAAE;aACpC,SAAS,CAAC,cAAI;YACb,KAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,CAAC;QACzB,CAAC,CAAC,CAAC;IAIP,CAAC;IACD,0CAAY,GAAZ;QACE,MAAM,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAC/B,CAAC;IACJ,CAAC;IACD,kCAAI,GAAJ;QAAA,iBA2BC;QA1BC,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC;YACtB,MAAM,CAAC;QAET,IAAM,UAAU,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;QACrC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,kBAAgB,UAAY,CAAC,CAAC;QAE9C,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;YACxB,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,gBAAM;gBAC5D,gBAAgB;gBAChB,KAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;gBACzB,KAAI,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;gBAC5B,GAAG;YACL,CAAC,CAAC,CAAC;QACL,CAAC;QACD,IAAI,CAAC,CAAC;YACJ,UAAU,CAAC,EAAE,GAAG,SAAS,CAAC;YAC1B,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,gBAAM;gBACzD,iBAAiB;gBACjB,KAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;gBACzB,KAAI,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;gBAC5B,gBAAgB;gBAChB,0BAA0B;gBAC1B,+BAA+B;gBAC/B,IAAI;YACN,CAAC,CAAC,CAAC;QACL,CAAC;IACH,CAAC;IACD,8CAAgB,GAAhB,UAAiB,OAAgB;QAC/B,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACxC,IAAI,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC;YACvB,aAAa,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC9D,WAAW,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC;YACrC,WAAW,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC;YACrC,SAAS,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC;YACjC,UAAU,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC;YACnC,gBAAgB,EAAE,CAAC,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC;YACjD,WAAW,EAAE,CAAC,IAAI,CAAC,eAAe,CAAC,EAAE,CAAC;SACvC,CAAC,CAAC;QAEH,4DAA4D;IAC9D,CAAC;IAED,qCAAqC;IACrC,4CAAc,GAAd,UAAe,KAAc;QAA7B,iBAkBC;QAjBC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;YACV,8BAA8B;QAChC,CAAC;QACD,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,uEAAmB,EAAE;YACpE,IAAI,EAAE,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,WAAW,EAAE,IAAI,CAAC,eAAe,EAAE,EAAE,YAAY,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,MAAM,EAAE,OAAO;SAC1H,CAAC,CAAC;QACH,IAAI,CAAC,wBAAwB,CAAC,WAAW,EAAE,CAAC,IAAI,EAAE;aAC/C,SAAS,CACT,gBAAM;YACL,KAAI,CAAC,kBAAkB,GAAG,MAAM,CAAC;YACjC,EAAE,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,MAAM,GAAG,CAAC,IAAI,KAAI,CAAC,kBAAkB,KAAK,IAAI,IAAI,KAAI,CAAC,kBAAkB,KAAK,SAAS,CAAC,CAAC,CAAC;gBAChH,KAAI,CAAC,eAAe,GAAG,KAAI,CAAC,kBAAkB,CAAC;gBAC/C,KAAI,CAAC,eAAe,GAAG,KAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,CAAC,2BAA2B;gBACpF,KAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC,KAAI,CAAC,eAAe,CAAC,EAAE,CAAC,CAAC;gBACzE,KAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,gBAAgB,CAAC,CAAC,QAAQ,CAAC,KAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC;YACtF,CAAC;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IA5IQ;QAAR,2DAAK,EAAE;kCAAc,wDAAS;4DAAC;IACV;QAArB,+DAAS,CAAC,SAAS,CAAC;;wDAAS;IAOrB;QAAR,2DAAK,EAAE;;qDAAc;IACZ;QAAT,4DAAM,EAAE;;8DAAyC;IAKzC;QAAR,2DAAK,EAAE;;0DAAuB;IAfpB,mBAAmB;QAR/B,+DAAS,CAAC;YACT,QAAQ,EAAE,OAAO;;;SAMlB,CAAC;yCAsBiC,0DAAW,EAAkB,sDAAM;YAC1C,sEAAc,EAAkB,2DAAS;YACzC,+EAAc;YACf,mFAAqB;YAC5B,gDAAM;OAzBb,mBAAmB,CA+I/B;IAAD,0BAAC;CAAA;AA/I+B;;;;;;;;;;;;AC7BhC,uQAAuQ,sCAAsC,gCAAgC,MAAM,yJAAyJ,kCAAkC,saAAsa,cAAc,yLAAyL,mCAAmC,8DAA8D,uBAAuB,4LAA4L,sCAAsC,+DAA+D,0BAA0B,yJAAyJ,iCAAiC,8DAA8D,yDAAyD,qJAAqJ,+BAA+B,8DAA8D,sDAAsD,wJAAwJ,gCAAgC,+DAA+D,oBAAoB,8TAA8T,mCAAmC,qNAAqN,qCAAqC,yTAAyT,2BAA2B,s3B;;;;;;;;;;;ACAj0G,yBAAyB,gBAAgB,EAAE,qBAAqB,eAAe,EAAE,oBAAoB,8BAA8B,mBAAmB,EAAE,mBAAmB,uBAAuB,gBAAgB,eAAe,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACE5M;AACmC;AACK;AACR;AACQ;AAC5B;AAGwB;AACgB;AAKrD;AACwD;AAO9E;IAoDI,+BACY,cAA8B,EAC9B,MAAc,EACd,MAAiB,EAAU,aAAoC,EAC/D,QAAkC;QAHlC,mBAAc,GAAd,cAAc,CAAgB;QAC9B,WAAM,GAAN,MAAM,CAAQ;QACd,WAAM,GAAN,MAAM,CAAW;QAAU,kBAAa,GAAb,aAAa,CAAuB;QAC/D,aAAQ,GAAR,QAAQ,CAA0B;QAtD9C,eAAU,GAAG,IAAI,oEAAkB,EAAE,CAAC;QAG/B,mBAAc,GAAG,IAAI,CAAC;QAsDzB,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC;QACzC,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC;QACvC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,oBAAkB,IAAI,CAAC,YAAY,iBAAY,IAAI,CAAC,WAAa,CAAC,CAAC;QACnF,IAAI,CAAC,mBAAmB,EAAE,CAAC;IAC/B,CAAC;IAlDD,+CAAe,GAAf,UAAgB,IAAI,EAAE,EAAM;QAA5B,iBAQC;QARqB,2BAAM;QACxB,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;QAC5B,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;QACvB,IAAM,OAAO,GAA0B,IAAI,CAAC,QAAQ,CAAC,uBAAuB,CAAC,sFAAmB,CAAC,CAAC;QAClG,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;QAC5D,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,IAAI,GAAG,IAAI,CAAC;QACvC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,SAAS,GAAG,EAAE,CAAC;QAC1C,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,aAAa,CAAC,SAAS,CAAC,eAAK,IAAI,YAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,EAA9B,CAA8B,CAAC,CAAC;IAChG,CAAC;IAED,2CAAW,GAAX;QACI,oCAAoC;QACpC,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;YACpB,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC;QAChC,CAAC;IACL,CAAC;IAGD,0CAAU,GAAV;QACI,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;QAC3B,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;YACpB,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC;QAChC,CAAC;IACL,CAAC;IAED,kDAAkB,GAAlB,UAAmB,MAAM;QACrB,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,IAAI,CAAC,UAAU,EAAE,CAAC;IACtB,CAAC;IAID,wCAAQ,GAAR,UAAS,KAAM;QACX,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,WAAW,CAAC;QACvC,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,UAAU,CAAC;QACrC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,sBAAoB,IAAI,CAAC,YAAY,iBAAY,IAAI,CAAC,WAAa,CAAC,CAAC;QACrF,IAAI,CAAC,mBAAmB,EAAE,CAAC;IAC/B,CAAC;IAeD,wCAAQ,GAAR;QACI,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QAC3C,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;IACrC,CAAC;IAED,2CAAW,GAAX,UAAY,WAAmB;QAC3B,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;IAC9D,CAAC;IAED,4CAAY,GAAZ;QAAA,iBAIC;QAHG,IAAI,CAAC,cAAc,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,cAAI;YAC5C,KAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC;QAChC,CAAC,CAAC,CAAC;IACP,CAAC;IAGD,8CAAc,GAAd,UAAe,MAAM;QACjB,sBAAsB;QACtB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;IAC/B,CAAC;IAED,2CAAW,GAAX,UAAY,EAAU;QAClB,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;IACrC,CAAC;IAED,6CAAa,GAAb,UAAc,OAAgB;QAA9B,iBAoBC;QAnBG,sCAAsC;QACtC,IAAM,YAAY,GAAG,IAAI,iEAAe,EAAE,CAAC;QAC3C,YAAY,CAAC,YAAY,GAAG,IAAI,CAAC;QACjC,YAAY,CAAC,SAAS,GAAG,IAAI,CAAC;QAC9B,YAAY,CAAC,MAAM,GAAG,OAAO,CAAC;QAC9B,YAAY,CAAC,KAAK,GAAG,OAAO,CAAC;QAC7B,YAAY,CAAC,IAAI,GAAG;YAChB,KAAK,EAAE,aAAW,OAAO,CAAC,EAAE,UAAK,OAAO,CAAC,WAAa;YACtD,OAAO,EAAE,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,sBAAsB,CAAC;SACrE,CAAC;QAEF,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,4EAAwB,EAAE,YAAY,CAAC,CAAC;QAE3E,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,gBAAM;YACpC,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;gBACT,KAAI,CAAC,UAAU,CAAC,IAAI,GAAG,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,WAAC,IAAI,QAAC,IAAI,OAAO,EAAZ,CAAY,CAAC,CAAC;gBACtE,KAAI,CAAC,cAAc,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,SAAS,EAAE,CAAC;YAC3D,CAAC;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAED;;OAEG;IACH,mDAAmB,GAAnB;QACI,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC,CAAC,CAAC;YACzB,IAAI,CAAC,gBAAgB,GAAG,CAAC,IAAI,EAAE,aAAa,EAAE,gBAAgB,EAAE,WAAW,EAAE,SAAS,EAAE,UAAU,EAAE,QAAQ,CAAC,CAAC;QAClH,CAAC;QACD,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,IAAI,GAAG,IAAI,IAAI,CAAC,WAAW,IAAI,GAAG,CAAC,CAAC,CAAC;YAC1D,IAAI,CAAC,gBAAgB,GAAG,CAAC,IAAI,EAAE,aAAa,EAAE,WAAW,EAAE,SAAS,EAAE,UAAU,EAAE,QAAQ,CAAC,CAAC;QAChG,CAAC;QACD,IAAI,CAAC,CAAC;YACF,IAAI,CAAC,gBAAgB,GAAG,CAAC,IAAI,EAAE,aAAa,EAAE,gBAAgB,EAAE,WAAW,EAAE,SAAS,EAAE,UAAU,EAAE,QAAQ,CAAC,CAAC;QAClH,CAAC;IACL,CAAC;IAvHwB;QAAxB,+DAAS,CAAC,8DAAY,CAAC;kCAAY,8DAAY;4DAAC;IAC7B;QAAnB,+DAAS,CAAC,yDAAO,CAAC;kCAAO,yDAAO;uDAAC;IAEyB;QAA1D,+DAAS,CAAC,kBAAkB,EAAE,EAAE,IAAI,EAAE,8DAAgB,EAAE,CAAC;;4DAAW;IAmCrE;QADC,kEAAY,CAAC,eAAe,EAAE,CAAC,QAAQ,CAAC,CAAC;;;;yDAMzC;IAlDQ,qBAAqB;QALjC,+DAAS,CAAC;YACP,QAAQ,EAAE,mBAAmB;;;SAGhC,CAAC;yCAsD8B,sEAAc;YACtB,gDAAM;YACN,2DAAS,EAAyB,mFAAqB;YACrD,sEAAwB;OAxDrC,qBAAqB,CA+HjC;IAAD,4BAAC;CAAA;AA/HiC;;;;;;;;;;;;;;;;;;;;;;;;ACxBO;AACc;AAEyB;AAChF,4EAA4E;AAE5E,IAAM,cAAc,GAAW;IAC7B,YAAY;IACZ,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,4FAAqB,EAAE;CAG/C,CAAC;AAWF;IAAA;IAAqC,CAAC;IAAzB,qBAAqB;QATjC,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY,CAAC,QAAQ,CAAC,cAAc,CAAC;aACtC;YACD,OAAO,EAAE;gBACP,4DAAY;aACb;SACF,CAAC;OAEW,qBAAqB,CAAI;IAAD,4BAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtBO;AAEzC,qFAAqF;AACL;AACd;AACR;AACQ;AAClE,4EAA4E;AACE;AACnB;AACL;AACc;AACM;AACN;AACV;AACW;AA8BrE;IAAA;IAA8B,CAAC;IAAlB,cAAc;QA3B1B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,mEAAY;gBACZ,wEAAe;gBACf,2FAAmB;gBACnB,8EAAqB,EAAE,8EAAoB;gBAC3C,8BAA8B;gBAC9B,0DAAW,EAAE,kEAAmB,EAAE,6EAAa,EAAE,mEAAe;aACjE;YACD,YAAY,EAAE;gBACZ,2BAA2B;gBAC3B,4FAAqB;gBAGrB,sFAAmB;aAGpB;YACD,SAAS,EAAE;gBACT,sEAAc,EAAE,+EAAc;aAC/B;YACD,eAAe,EAAE;gBACf,yBAAyB;gBACzB,sFAAmB;aACpB;SACF,CAAC;OAEW,cAAc,CAAI;IAAD,qBAAC;CAAA;AAAJ","file":"features-projects-projects-module.js","sourcesContent":["module.exports = \"<div class=\\\"main-div\\\">\\r\\n    <mat-card class=\\\"z-depth center\\\" flex=\\\"90\\\">\\r\\n\\r\\n        <mat-toolbar color=\\\"primary\\\" layout=\\\"fill\\\">\\r\\n            {{ title }}\\r\\n        </mat-toolbar>\\r\\n\\r\\n        <div class=\\\"basic-container mat-elevation-z8\\\">\\r\\n            <mat-horizontal-stepper [linear]=\\\"true\\\" #stepper>\\r\\n\\r\\n                <!-- Personal Form for Step 1 -->\\r\\n                <mat-step [stepControl]=\\\"projectForm\\\">\\r\\n                    <ng-template matStepLabel> {{'ADDEDITPROJECTPG.PROJECTINFO' | translate}}</ng-template>\\r\\n                    <!-- <app-personal-form [form]=\\\"personalForm\\\"></app-personal-form> -->\\r\\n\\r\\n                    <form [formGroup]=\\\"projectForm\\\">\\r\\n                        <mat-form-field class=\\\"example-full-width\\\">\\r\\n                            <input matInput placeholder=\\\"{{'ADDEDITPROJECTPG.PROJECTNAME' | translate}}\\\"\\r\\n                                formControlName=\\\"projectName\\\" required>\\r\\n                        </mat-form-field>\\r\\n\\r\\n                        <mat-checkbox (change)='onChange($event)' formControlName='isSetDate' color='primary'>\\r\\n                            {{'ADDEDITPROJECTPG.ISDATE' | translate}}</mat-checkbox>\\r\\n\\r\\n                        <mat-form-field class=\\\"\\\">\\r\\n                            <input formControlName=\\\"startDate\\\" [readOnly]=\\\"isDisabled\\\" matInput [matDatepicker]=\\\"picker\\\"\\r\\n                                [min]=\\\"minDate\\\" [max]=\\\"maxDate\\\"\\r\\n                                placeholder=\\\"{{'ADDEDITPROJECTPG.STARTDATE' | translate}}\\\">\\r\\n                            <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\" [disabled]=\\\"isDisabled\\\">\\r\\n                            </mat-datepicker-toggle>\\r\\n                            <mat-datepicker [startAt]=\\\"minDate\\\" startView=\\\"year\\\" #picker></mat-datepicker>\\r\\n                        </mat-form-field>\\r\\n\\r\\n                        <mat-form-field class=\\\"\\\">\\r\\n                            <input formControlName=\\\"endDate\\\" [readOnly]=\\\"isDisabled\\\" matInput [matDatepicker]=\\\"picker2\\\"\\r\\n                                [min]=\\\"endDate\\\" [max]=\\\"maxDate\\\"\\r\\n                                placeholder=\\\"{{'ADDEDITPROJECTPG.ENDDATE' | translate}}\\\">\\r\\n                            <mat-datepicker-toggle matSuffix [for]=\\\"picker2\\\" [disabled]=\\\"isDisabled\\\">\\r\\n                            </mat-datepicker-toggle>\\r\\n                            <mat-datepicker #picker2 startView=\\\"year\\\" [startAt]=\\\"startDate\\\"></mat-datepicker>\\r\\n                        </mat-form-field>\\r\\n\\r\\n\\r\\n                        <div> {{'ADDEDITPROJECTPG.PRIORITY' | translate}}\\r\\n                            <mat-slider formControlName=\\\"priority\\\" (input)=\\\"priority = $event.value\\\" step=\\\"1\\\" min=\\\"0\\\"\\r\\n                                max=\\\"5\\\" [value]=\\\"priority\\\" thumbLabel=true>\\r\\n                            </mat-slider>\\r\\n                        </div>\\r\\n                        <div>\\r\\n                            <mat-form-field>\\r\\n                                <input matInput placeholder=\\\"{{'ADDEDITPROJECTPG.PROJECTMANAGER' | translate}}\\\"\\r\\n                                    [required]=\\\"false\\\" readonly [value]=\\\"managerfullName\\\"\\r\\n                                    formControlName=\\\"projectManager\\\">\\r\\n                                <mat-icon matSuffix color=\\\"primary\\\" (click)=\\\"openDataDialog(true)\\\">search</mat-icon>\\r\\n                            </mat-form-field>\\r\\n\\r\\n                        </div>\\r\\n                    </form>\\r\\n\\r\\n                    <div>\\r\\n                        <button mat-raised-button matStepperNext type=\\\"button\\\" matTooltip=\\\"Next Step\\\"\\r\\n                            class=\\\"btn-primary\\\">{{'STEPPERS.NEXT' | translate}}</button>\\r\\n                    </div>\\r\\n                </mat-step>\\r\\n\\r\\n                <!-- Result Form for Step 4 -->\\r\\n                <mat-step>\\r\\n                    <ng-template matStepLabel>{{'ADDEDITPROJECTPG.REVIEW' | translate}}</ng-template>\\r\\n                    <app-project-result-form [formData]=\\\"getProject()\\\"></app-project-result-form>\\r\\n                    <div class=\\\"top-15\\\">\\r\\n                        <button mat-raised-button matStepperPrevious>{{'STEPPERS.PREIVIOUS' | translate}}</button>&nbsp;\\r\\n                        <button class=\\\"btn-success\\\" mat-raised-button cdkFocusInitial\\r\\n                            (click)=\\\"save()\\\">{{'ADDEDITPROJECTPG.SAVE' | translate}}</button>\\r\\n                    </div>\\r\\n                </mat-step>\\r\\n\\r\\n            </mat-horizontal-stepper>\\r\\n        </div>\\r\\n    </mat-card>\\r\\n</div>\"","module.exports = \".center {\\n  width: 100%; }\\n\\n.main-div {\\n  width: 80%;\\n  margin: 20px;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center; }\\n\"","import { ChangeDetectionStrategy } from '@angular/core';\nimport { MatInputModule } from '@angular/material';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { filter, map } from 'rxjs/operators';\nimport { ValidationErrors, ValidatorFn } from '@angular/forms'\nimport { DataDialogComponent } from '@app/shared/dialogs';\nimport { MatDialog, MatDialogRef } from '@angular/material';\nimport { managerModel } from '../../../shared/models/managerModel';\n\nimport { Component, Input, EventEmitter, Output, ViewChild, OnInit } from '@angular/core';\nimport { Logger } from '@app/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\nimport { ContactService } from '../../contacts/shared/contact.service';\n\nimport { Project, ProjectInfo, Manager } from '../shared/project'\nimport { ProjectService } from '../shared/project.service';\nimport { Observable } from 'rxjs';\nimport { SharedFunctionService } from '../../../core/shared-function.service';\n\n@Component({\n  selector: \"alert\",\n  templateUrl: './add-project.component.html',\n  styleUrls: ['./add-project.component.scss']\n  // template: `\n  //   <h1 (click)=\"output.next('output')\">Alert {{type}}</h1>\n  // `,\n})\nexport class AddProjectComponent implements OnInit {\n  @Input() projectForm: FormGroup;\n  @ViewChild('stepper') stepper;\n\n  public startDate: Date;\n  minDate = new Date(2019, 5, 1);\n  maxDate = new Date(2020, 5, 1);\n  public endDate: Date;\n  title = '';\n  @Input() type: string;\n  @Output() sentProjEvent = new EventEmitter<any>();\n  public managers: managerModel[];\n  public managerfullName: string = '';\n  public selectedManager: Manager = new Manager();\n  public retSelectedManager: any;\n  @Input() projectId: number = 0;\n  projectManagerDataDialog: MatDialogRef<DataDialogComponent>;\n  public project: Project;\n  isDisabled = true;\n  public priority: number = 0;\n\n  constructor(private formBuilder: FormBuilder, private router: Router,\n    private projectService: ProjectService, private dialog: MatDialog,\n    private contactService: ContactService,\n    private sharedService: SharedFunctionService,\n    private logger: Logger) {\n\n    this.project = this.createProjectStructure(this.projectId);\n    this.buildProjectForm(this.project);\n    this.getProjectManager();\n  }\n  ngOnInit() {\n\n    if (this.projectId > 0)\n      this.projectService.getProject(this.projectId).subscribe(data => {\n        this.project = data;\n        //  this.logger.log(`New managers: ${JSON.stringify(this.managers)}`);\n        if (this.projectId > 0 && this.project.contactId != null && this.project.contactId > 0) {\n          this.selectedManager = (this.managers.filter(x => x.id == this.project.contactId))[0];\n        }\n        this.buildProjectForm(data);\n        this.isDisabled = !this.project.isSetDate;\n      });\n\n    this.title = this.sharedService.getTranslationWithData('ADDEDITPROJECTPG.TITLE', { value: this.type });\n    console.log(this.title);\n  }\n  onChange($event: Event) {\n    this.isDisabled = !this.isDisabled;\n    if (this.isDisabled) {\n      this.projectForm.controls['startDate'].setValue('');\n      this.projectForm.controls['endDate'].setValue('');\n    }\n    return;\n  }\n  createProjectStructure(id: number): ProjectInfo {\n    let prjInfo = new ProjectInfo('', id, false, '', null, null, null);\n    return prjInfo;\n  }\n  getProject(): Project {\n    return {\n      ...this.projectForm.value,\n    };\n  }\n  getProjectManager() {\n\n    this.contactService.getProjectManager()\n      .subscribe(data => {\n        this.managers = (data);\n      });\n\n\n\n  }\n  invalidForms(): boolean {\n    return (this.projectForm.invalid\n    );\n  }\n  save() {\n    if (this.invalidForms())\n      return;\n\n    const newProject = this.getProject();\n    this.logger.log(`New Project: ${newProject}`);\n\n    if (this.project.id > 0) {\n      this.projectService.updateProject(newProject).subscribe(result => {\n        // if (result) {\n        this.projectForm.reset();\n        this.sentProjEvent.emit('');\n        //}\n      });\n    }\n    else {\n      newProject.id = undefined;\n      this.projectService.addProject(newProject).subscribe(result => {\n        //  if (result) {\n        this.projectForm.reset();\n        this.sentProjEvent.emit('');\n        // this.reset();\n        // go to Contace List page\n        // this.router.navigate(['/']);\n        // }\n      });\n    }\n  }\n  buildProjectForm(project: Project): void {\n    this.project = project;\n    this.projectForm = this.formBuilder.group({\n      'id': [this.project.id],\n      'projectName': [this.project.projectName, Validators.required],\n      'isSetDate': [this.project.isSetDate],\n      'startDate': [this.project.startDate],\n      'endDate': [this.project.endDate],\n      'priority': [this.project.priority],\n      'projectManager': [this.selectedManager.fullName],\n      'contactId': [this.selectedManager.id]\n    });\n\n    //this.projectForm.setValidators(this.comparisonValidator())\n  }\n\n  //Open Dialog box and pass parameter \n  openDataDialog(isAdd: boolean) {\n    if (isAdd) {\n      //this.selectedManager = null;\n    }\n    this.projectManagerDataDialog = this.dialog.open(DataDialogComponent, {\n      data: { fillData: this.managers, selectedOne: this.selectedManager }, disableClose: true, width: '400px', height: '500px'\n    });\n    this.projectManagerDataDialog.afterClosed().pipe()\n      .subscribe\n      (result => {\n        this.retSelectedManager = result;\n        if (Object.keys(result).length > 0 && this.retSelectedManager !== null && this.retSelectedManager !== undefined) {\n          this.selectedManager = this.retSelectedManager;\n          this.managerfullName = this.retSelectedManager.fullName; // assing first from array \n          this.projectForm.controls['contactId'].setValue(this.selectedManager.id);\n          this.projectForm.controls['projectManager'].setValue(this.selectedManager.fullName);\n        }\n      });\n  }\n\n}\n","module.exports = \"<div layout=\\\"row\\\" layout-align=\\\"space-between center\\\" flex class=\\\"layout-align-space-between-center layout-row flex\\\">\\n    <mat-form-field>\\n        <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\"\\n            placeholder=\\\"{{'PROJECT.SEARCHPROJECTS' | translate}}\\\">\\n    </mat-form-field>&nbsp;&nbsp;\\n\\n    <button mat-raised-button color=\\\"accent\\\" (click)=\\\"createComponent('Add',0)\\\">\\n        <mat-icon aria-label=\\\"add project\\\">work</mat-icon> {{'PROJECT.ADDPROJECT' | translate}}\\n    </button>\\n\\n\\n</div>\\n\\n<div class=\\\"basic-container mat-elevation-z8\\\">\\n    <table mat-table [dataSource]=\\\"dataSource\\\" matSort matSortActive=\\\"id\\\" matSortDirection=\\\"desc\\\" matSortDisableClear>\\n        <!-- Id Column -->\\n        <ng-container matColumnDef=\\\"id\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header disableClear>ID</th>\\n            <td mat-cell *matCellDef=\\\"let project\\\">{{ project.id }}</td>\\n        </ng-container>\\n\\n        <!-- Name Column -->\\n        <ng-container matColumnDef=\\\"projectName\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>{{'PROJECT.PROJECTNAME' | translate}}</th>\\n            <td mat-cell *matCellDef=\\\"let project\\\">{{ project.projectName }}</td>\\n        </ng-container>\\n\\n        <!-- Name Column -->\\n        <ng-container matColumnDef=\\\"projectManager\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>{{'PROJECT.PROJECTMANAGER' | translate}} </th>\\n            <td mat-cell *matCellDef=\\\"let project\\\">{{ project.projectManager }}</td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"startDate\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>{{'PROJECT.STARTDATE' | translate}}</th>\\n            <td mat-cell *matCellDef=\\\"let project\\\">{{ project.startDate   | formatDateText: 28: 'MM-dd-yyyy'}}</td>\\n        </ng-container>\\n        <ng-container matColumnDef=\\\"endDate\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>{{'PROJECT.ENDDATE' | translate}}</th>\\n            <td mat-cell *matCellDef=\\\"let project\\\">{{ project.endDate | formatDateText: 28: 'MM-dd-yyyy' }}</td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"priority\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>{{'PROJECT.PRIORITY' | translate}} </th>\\n            <td mat-cell *matCellDef=\\\"let project\\\">{{ project.priority }}</td>\\n        </ng-container>\\n        <!-- Action Column -->\\n        <ng-container matColumnDef=\\\"action\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Action</th>\\n            <td mat-cell *matCellDef=\\\"let project\\\">\\n                <button mat-icon-button color=\\\"accent\\\" matTooltip=\\\"{{'PROJECT.EDITPROJECT' | translate}}\\\">\\n                    <mat-icon (click)=\\\"editProject(project.id)\\\" aria-label=\\\"edit project\\\">edit</mat-icon>\\n                </button>\\n                <button mat-icon-button color=\\\"warn\\\" matTooltip=\\\"{{'PROJECT.DELETEPROJECT' | translate}}\\\">\\n                    <mat-icon (click)=\\\"deleteProject(project)\\\" aria-label=\\\"delete project\\\">delete_forever</mat-icon>\\n                </button>\\n            </td>\\n        </ng-container>\\n\\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n\\n    </table>\\n    <mat-paginator [pageSizeOptions]=\\\"[5, 10]\\\" showFirstLastButtons></mat-paginator>\\n\\n    <!-- <button (click)=\\\"createComponent('success')\\\">Create success alert</button>\\n    <button (click)=\\\"createComponent('danger')\\\">Create danger alert</button> -->\\n\\n\\n\\n</div>\\n\\n<br />\\n\\n\\n<div layout=\\\"row\\\" [hidden]=\\\"hideAddProject\\\" layout-align=\\\"space-between center\\\" flex\\n    class=\\\"layout-align-space-between-center layout-row flex\\\">\\n    <button mat-mini-fab color=\\\"accent\\\" (click)=\\\"closeClick()\\\" class=\\\"button-right\\\">\\n        <mat-icon class=\\\"mat-24\\\">close</mat-icon>\\n    </button>\\n    <div class=\\\"basic-container mat-elevation-z8\\\">\\n        <mat-card class=\\\"z-depth center\\\" flex=\\\"90\\\">\\n            <template #projectContainer (sentProjEvent)=\\\"receiveProjSuccess($event)\\\"></template>\\n\\n        </mat-card>\\n    </div>\\n</div>\"","module.exports = \"table {\\n  width: 100%; }\\n\\n.mat-form-field {\\n  width: 50%; }\\n\\n.btn-secondary {\\n  background-color: #ffd740;\\n  color: #000000; }\\n\\n.button-right {\\n  position: absolute;\\n  right: 45px;\\n  z-index: 1; }\\n\"","import {\n    Component, HostListener, OnInit, Pipe, PipeTransform\n} from '@angular/core';\nimport { MatPaginator, MatSort } from '@angular/material';\nimport { MatDialog, MatDialogConfig } from '@angular/material';\nimport { MatTableDataSource } from '@angular/material';\nimport { ConfirmedDialogComponent } from '@app/shared/dialogs';\nimport { Logger } from '@app/core';\n//import { ContactDetailComponent } from '../contact-detail/contact-detail.component';\nimport { Project } from '../shared/project'\nimport { ProjectService } from '../shared/project.service';\nimport { AddProjectComponent } from '../new-project/add-project.component';\nimport {\n    NgModule, Input, ComponentFactory, ComponentRef,\n    ComponentFactoryResolver, ViewContainerRef, ChangeDetectorRef,\n    TemplateRef, ViewChild, Output, EventEmitter\n} from '@angular/core'\nimport { SharedFunctionService } from '../../../core/shared-function.service';\n\n@Component({\n    selector: 'app-projects-list',\n    templateUrl: './projects-list.component.html',\n    styleUrls: ['./projects-list.component.scss']\n})\nexport class ProjectsListComponent implements OnInit {\n    displayedColumns: string[];\n    dataSource = new MatTableDataSource();\n    screenHeight: any;\n    screenWidth: any;\n    public hideAddProject = true;\n\n    @ViewChild(MatPaginator) paginator: MatPaginator;\n    @ViewChild(MatSort) sort: MatSort;\n\n    @ViewChild(\"projectContainer\", { read: ViewContainerRef }) container;\n    componentRef: ComponentRef<any>;\n\n    createComponent(type, id = 0) {\n        this.hideAddProject = false;\n        this.container.clear();\n        const factory: ComponentFactory<any> = this.resolver.resolveComponentFactory(AddProjectComponent);\n        this.componentRef = this.container.createComponent(factory);\n        this.componentRef.instance.type = type;\n        this.componentRef.instance.projectId = id;\n        this.componentRef.instance.sentProjEvent.subscribe(event => this.receiveProjSuccess(event));\n    }\n\n    ngOnDestroy() {\n        //   console.log(this.componentRef);\n        if (this.componentRef) {\n            this.componentRef.destroy();\n        }\n    }\n\n\n    closeClick() {\n        this.hideAddProject = true;\n        if (this.componentRef) {\n            this.componentRef.destroy();\n        }\n    }\n\n    receiveProjSuccess($event) {\n        this.loadProjects();\n        this.closeClick();\n    }\n\n\n    @HostListener('window:resize', ['$event'])\n    onResize(event?) {\n        this.screenHeight = window.innerHeight;\n        this.screenWidth = window.innerWidth;\n        this.logger.log(`Resize() height: ${this.screenHeight}; width: ${this.screenWidth}`);\n        this.setDisplayedColumns();\n    }\n\n    constructor(\n        private projectService: ProjectService,\n        private logger: Logger,\n        private dialog: MatDialog, private sharedService: SharedFunctionService,\n        private resolver: ComponentFactoryResolver\n    ) {\n\n        this.screenHeight = window.screen.height;\n        this.screenWidth = window.screen.width;\n        this.logger.log(`Init() height: ${this.screenHeight}; width: ${this.screenWidth}`);\n        this.setDisplayedColumns();\n    }\n\n    ngOnInit() {\n        this.loadProjects();\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n    }\n\n    applyFilter(filterValue: string) {\n        this.dataSource.filter = filterValue.trim().toLowerCase();\n    }\n\n    loadProjects() {\n        this.projectService.getProjects().subscribe(data => {\n            this.dataSource.data = data;\n        });\n    }\n\n\n    receiveSuccess($event) {\n        //this.loadContacts();\n        this.hideAddProject = true;\n    }\n\n    editProject(id: number): void {\n        this.createComponent('Edit', id);\n    }\n\n    deleteProject(project: Project): void {\n        // Create configuration for the dialog\n        const dialogConfig = new MatDialogConfig();\n        dialogConfig.disableClose = true;\n        dialogConfig.autoFocus = true;\n        dialogConfig.height = '200px';\n        dialogConfig.width = '400px';\n        dialogConfig.data = {\n            title: `Delete  ${project.id}- ${project.projectName}`,\n            message: this.sharedService.getTranslation('PROJECT.CONFIRMTITLE')\n        };\n\n        const dialogRef = this.dialog.open(ConfirmedDialogComponent, dialogConfig);\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.dataSource.data = this.dataSource.data.filter(e => e != project);\n                this.projectService.deleteProject(project).subscribe();\n            }\n        });\n    }\n\n    /**\n     * Update a list of table columns to be displayed based on the width of the screen.\n     */\n    setDisplayedColumns() {\n        if (this.screenWidth < 420) {\n            this.displayedColumns = ['id', 'projectName', 'projectManager', 'startDate', 'endDate', 'priority', 'action'];\n        }\n        else if (this.screenWidth >= 420 && this.screenWidth <= 800) {\n            this.displayedColumns = ['id', 'projectName', 'startDate', 'endDate', 'priority', 'action'];\n        }\n        else {\n            this.displayedColumns = ['id', 'projectName', 'projectManager', 'startDate', 'endDate', 'priority', 'action'];\n        }\n    }\n}\n\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { ProjectsListComponent } from './projects-list/projects-list.component';\n//import { NewProjectComponent } from './new-project/new-project.component';\n\nconst projectsRoutes: Routes = [\n  // 1st Route\n  { path: '', component: ProjectsListComponent },\n  // 2nd Route\n  //  { path: 'add-project', component: NewProjectComponent }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(projectsRoutes)\n  ],\n  exports: [\n    RouterModule\n  ]\n})\n\nexport class ProjectsRoutingModule { }","import { NgModule } from '@angular/core';\n\n//import { ContactDetailComponent } from './contact-detail/contact-detail.component';\nimport { ProjectsListComponent } from './projects-list/projects-list.component';\nimport { ProjectsRoutingModule } from './projects-routing.module';\nimport { ProjectService } from './shared/project.service';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n//import { NewContactComponent } from './new-contact/new-contact.component';\nimport { MaterialFormsModule } from '@app/shared/forms/material-forms.module';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { ContactService } from '../contacts/shared/contact.service';\nimport { AddProjectComponent } from './new-project/add-project.component';\nimport { DialogsModule } from '../../shared/dialogs/dialogs.module';\nimport { SharedModule } from '../../shared/shared.module';\nimport { AppSharedPipesModule } from '../../shared/app-shared-pipes';\n\n\n@NgModule({\n  imports: [\n    SharedModule,\n    MatDialogModule, // remove this if not used\n    MaterialFormsModule,\n    ProjectsRoutingModule, AppSharedPipesModule,\n    // ProjectResultFormComponent,\n    FormsModule, ReactiveFormsModule, DialogsModule, TranslateModule\n  ],\n  declarations: [\n    //  ContactDetailComponent,\n    ProjectsListComponent,\n\n\n    AddProjectComponent,\n\n    // NewContactComponent\n  ],\n  providers: [\n    ProjectService, ContactService\n  ],\n  entryComponents: [\n    // ContactDetailComponent\n    AddProjectComponent,\n  ]\n})\n\nexport class ProjectsModule { }"],"sourceRoot":""}